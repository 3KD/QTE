{
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_FUNCTION_CHECKLIST.md": {
    "headings": [
      "QTEGUI Function Checklist",
      "Tabs",
      "Event Handlers",
      "Other Methods by Class"
    ],
    "bullets": [
      "(no tabs found)",
      "(no handlers found)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/MASTER_GAP_REPORT.md": {
    "headings": [
      "Master Gap Report",
      "Docs topics missing from master",
      "Code topics missing from master",
      "Test topics missing from master"
    ],
    "bullets": [
      "Scanned repo root: /Users/erik/Documents/QTExpanded/program5branchseries",
      "Master file: /Users/erik/Documents/QTExpanded/program5branchseries/docs/QTEGUIMASTER.md (missing \u2192 treated as empty)",
      "[ ] Tab 05 \u2014 Gates",
      "[ ] Actions",
      "[ ] [ ] after",
      "[ ] [ ] after(self, ms, func=None, args)",
      "[ ] [ ] aftercancel",
      "[ ] [ ] aftercancel(self, id)",
      "[ ] [ ] afteridle",
      "[ ] [ ] afteridle(self, func, args)",
      "[ ] [ ] anchor",
      "[ ] [ ] anchor(self, anchor=None)",
      "[ ] QTE GUI API Map (final)",
      "[ ] API Map: QTEGUIAPIMAPfinal.md",
      "[ ] Append [rail] to map plus/minus amplitudes to even/odd rails.",
      "[ ] auto prefers mpmath; else series/Euler accel",
      "[ ] Backends: --backend {auto,series,mp} or env QTEPOLYLOGBACKEND.",
      "[ ] Barrier after prep \u2014 visual split between prep and later ops",
      "[ ] basispair \u2014 currently \"Z/QFT\" (computational + discrete Fourier)",
      "[ ] [ ] bbox",
      "[ ] [ ] bbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] [ ] bell",
      "[ ] [ ] bell(self, displayof=0)",
      "[ ] Bessel",
      "[ ] [ ] bind",
      "[ ] [ ] bind(self, sequence=None, func=None, add=None)",
      "[ ] [ ] bind(self, what, sequence, func, add, needcleanup=1)",
      "[ ] [ ] bindall",
      "[ ] [ ] bindall(self, sequence=None, func=None, add=None)",
      "[ ] [ ] bindclass",
      "[ ] [ ] bindclass(self, className, sequence=None, func=None, add=None)",
      "[ ] [ ] bindtags",
      "[ ] [ ] bindtags(self, tagList=None)",
      "[ ] Tabs (builders)",
      "[ ] buildui",
      "[ ] [ ] buildui(self)",
      "[ ] Cache API",
      "[ ] Caching",
      "[ ] [ ] cget",
      "[ ] [ ] cget(self, key)",
      "[ ] Class introspection",
      "[ ] Classes and methods",
      "[ ] Classes and methods (QTEGUI.py)",
      "[ ] Clear at runtime:",
      "[ ] CLI",
      "[ ] [ ] clipboardappend",
      "[ ] [ ] clipboardappend(self, string, kw)",
      "[ ] [ ] clipboardclear",
      "[ ] [ ] clipboardclear(self, kw)",
      "[ ] [ ] clipboardget",
      "[ ] [ ] clipboardget(self, kw)",
      "[ ] [ ] columnconfigure",
      "[ ] [ ] columnconfigure(self, index, cnf={}, kw)",
      "[ ] [ ] computecertificate",
      "[ ] [ ] computecertificate(self)",
      "[ ] [ ] config",
      "[ ] [ ] config(self, cnf=None, kw)",
      "[ ] [ ] configure",
      "[ ] [ ] configure(self, cmd, cnf, kw)",
      "[ ] [ ] configure(self, cnf=None, kw)",
      "[ ] Constants / series",
      "[ ] Controls",
      "[ ] Coverage Checklist",
      "[ ] the current QFT circuit (if built), or",
      "[ ] Tabs (currently wired)",
      "[ ] Cylindrical Bessel Jn: J0, J1, J2, \u2026",
      "[ ] Decompose initialize \u2014 expands initialize to native gates (verbose)",
      "[ ] [ ] deletecommand",
      "[ ] [ ] deletecommand(self, name)",
      "[ ] [ ] destroy",
      "[ ] [ ] destroy(self)",
      "[ ] Dev notes",
      "[ ] [ ] displayof(self, displayof)",
      "[ ] [ ] do(self, name, args=())",
      "[ ] Draw (ASCII / Text) \u2014 text drawer (always readable, no ellipses)",
      "[ ] Draw Current QFT Circuit \u2014 renders the last built QFT spectrum circuit",
      "[ ] Draw Prep for Active/Last Saved \u2014 builds initialize(|\u03c8\u27e9) and draws it",
      "[ ] Enable with --cache or QTECACHE=1.",
      "[ ] Ensemble von Neumann entropy:",
      "[ ] Entropy Certificates (Z/QFT)",
      "[ ] Entropy \u2014 save/verify entropy certificates",
      "[ ] EntropyTab",
      "[ ] Entry Module",
      "[ ] Env",
      "[ ] Event Handlers",
      "[ ] Event Handlers (from source)",
      "[ ] Event Handlers (source scan)",
      "[ ] [ ] eventadd",
      "[ ] [ ] eventadd(self, virtual, sequences)",
      "[ ] [ ] eventdelete",
      "[ ] [ ] eventdelete(self, virtual, sequences)",
      "[ ] [ ] eventgenerate",
      "[ ] [ ] eventgenerate(self, sequence, kw)",
      "[ ] [ ] eventinfo",
      "[ ] [ ] eventinfo(self, virtual=None)",
      "[ ] Examples",
      "[ ] Feature Flags",
      "[ ] Fields (schema v1)",
      "[ ] File: QTEGUILite.py",
      "[ ] File: QTEGUI.py",
      "[ ] Flags",
      "[ ] flatness \u2014 spectral flatness of two-sided power \\( |\\mathrm{FFT}(a)|^2 \\) (geom/arith mean)",
      "[ ] [ ] focus",
      "[ ] [ ] focus(self)",
      "[ ] [ ] focusdisplayof",
      "[ ] [ ] focusdisplayof(self)",
      "[ ] [ ] focusforce",
      "[ ] [ ] focusforce(self)",
      "[ ] [ ] focusget",
      "[ ] [ ] focusget(self)",
      "[ ] [ ] focuslastfor",
      "[ ] [ ] focuslastfor(self)",
      "[ ] [ ] focusset",
      "[ ] [ ] focusset(self)",
      "[ ] [ ] forget",
      "[ ] [ ] forget(self)",
      "[ ] QTE GUI Function Checklist (final)",
      "[ ] Function Checklist: QTEGUIFUNCTIONCHECKLISTfinal.md",
      "[ ] [ ] getboolean",
      "[ ] [ ] getboolean(self, s)",
      "[ ] [ ] getboolean(self, string)",
      "[ ] [ ] getconfigure(self, args)",
      "[ ] [ ] getconfigure1(self, args)",
      "[ ] [ ] getdouble",
      "[ ] [ ] getdouble(self, s)",
      "[ ] [ ] getdoubles(self, string)",
      "[ ] [ ] getint",
      "[ ] [ ] getint(self, s)",
      "[ ] [ ] getints(self, string)",
      "[ ] [ ] getvar",
      "[ ] [ ] getvar(self, name='PYVAR')",
      "[ ] [ ] grabcurrent",
      "[ ] [ ] grabcurrent(self)",
      "[ ] [ ] grabrelease",
      "[ ] [ ] grabrelease(self)",
      "[ ] [ ] grabset",
      "[ ] [ ] grabset(self)",
      "[ ] [ ] grabsetglobal",
      "[ ] [ ] grabsetglobal(self)",
      "[ ] [ ] grabstatus",
      "[ ] [ ] grabstatus(self)",
      "[ ] [ ] grid",
      "[ ] [ ] grid(self, cnf={}, kw)",
      "[ ] [ ] gridanchor",
      "[ ] [ ] gridanchor(self, anchor=None)",
      "[ ] [ ] gridbbox",
      "[ ] [ ] gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] [ ] gridcolumnconfigure",
      "[ ] [ ] gridcolumnconfigure(self, index, cnf={}, kw)",
      "[ ] [ ] gridconfigure",
      "[ ] [ ] gridconfigure(self, cnf={}, kw)",
      "[ ] [ ] gridconfigure(self, command, index, cnf, kw)",
      "[ ] [ ] gridconvvalue(self, value)",
      "[ ] [ ] gridforget",
      "[ ] [ ] gridforget(self)",
      "[ ] [ ] gridinfo",
      "[ ] [ ] gridinfo(self)",
      "[ ] [ ] gridlocation",
      "[ ] [ ] gridlocation(self, x, y)",
      "[ ] [ ] gridpropagate",
      "[ ] [ ] gridpropagate(self, flag=['noarg'])",
      "[ ] [ ] gridremove",
      "[ ] [ ] gridremove(self)",
      "[ ] [ ] gridrowconfigure",
      "[ ] [ ] gridrowconfigure(self, index, cnf={}, kw)",
      "[ ] [ ] gridsize",
      "[ ] [ ] gridsize(self)",
      "[ ] [ ] gridslaves",
      "[ ] [ ] gridslaves(self, row=None, column=None)",
      "[ ] Handlers",
      "[ ] haseval: False",
      "[ ] hasfftwrapper: True",
      "[ ] hasFigureCanvasTkAgg: True",
      "[ ] hastkimport: True",
      "[ ] hasTOMOOK: True",
      "[ ] hasttkimport: True",
      "[ ] Hide initialize box \u2014 show compact placeholder instead",
      "[ ] d \u2014 Hilbert space dimension \\(d\\)",
      "[ ] HminQFTbits \u2014 Min-entropy of \\(pf\\) (bits)",
      "[ ] HminZbits \u2014 Min-entropy of \\(pz\\) (bits)",
      "[ ] HQFTbits \u2014 Shannon entropy of \\(pf = |Fa|^2\\) with unitary DFT \\(F/\\sqrt{d}\\) (bits)",
      "[ ] HZbits \u2014 Shannon entropy of \\(pz = |a|^2\\) (bits)",
      "[ ] [ ] identify",
      "[ ] [ ] identify(self, x, y)",
      "[ ] [ ] imagenames",
      "[ ] [ ] imagenames(self)",
      "[ ] [ ] imagetypes",
      "[ ] [ ] imagetypes(self)",
      "[ ] importsentropylab: True",
      "[ ] importsharmonicanalysis: True",
      "[ ] importsquantumembedding: True",
      "[ ] [ ] info",
      "[ ] [ ] info(self)",
      "[ ] init",
      "[ ] [ ] instate",
      "[ ] [ ] instate(self, statespec, callback=None, args, kw)",
      "[ ] Introspection (actual class methods)",
      "[ ] Introspection Cross-check (class methods)",
      "[ ] It hosts tabs from QTEGUILite when available.",
      "[ ] [ ] keys",
      "[ ] [ ] keys(self)",
      "[ ] Labels reference",
      "[ ] [ ] lift",
      "[ ] [ ] lift(self, aboveThis=None)",
      "[ ] \u03c0, e, ln(2), \u03b6(k) for k=2..5, \u03b3 (Euler\u2013Mascheroni), Catalan, \u03c6, exp(\u03c0), 2^\u221a2.",
      "[ ] [ ] location",
      "[ ] [ ] location(self, x, y)",
      "[ ] [ ] lower",
      "[ ] [ ] lower(self, belowThis=None)",
      "[ ] Maassen\u2013Uffink (MUB) bound: for dimension \\(d\\),",
      "[ ] Maclaurin",
      "[ ] Maclaurin[f(x); x=<point>; r=<radius>] with helpers autor, realcoeffs.",
      "[ ] [ ] mainloop",
      "[ ] [ ] mainloop(self, n=0)",
      "[ ] Matplotlib Tk canvas import: yes",
      "[ ] Tabs & Methods (from QTEGUILite)",
      "[ ] [ ] Miscwinfogetint(self, x)",
      "[ ] [ ] Miscwinfoparseitem(self, t)",
      "[ ] mp forces mpmath.polylog",
      "[ ] [ ] nametowidget",
      "[ ] [ ] nametowidget(self, name)",
      "[ ] (no buildtab methods found)",
      "[ ] (no tabs found)",
      "[ ] (no handlers found)",
      "[ ] (none)",
      "[ ] Notes",
      "[ ] [ ] optionadd",
      "[ ] [ ] optionadd(self, pattern, value, priority=None)",
      "[ ] Optional deps present in code: entropylab, harmonicanalysis, quantumembedding",
      "[ ] [ ] optionclear",
      "[ ] [ ] optionclear(self)",
      "[ ] [ ] optionget",
      "[ ] [ ] optionget(self, name, className)",
      "[ ] [ ] optionreadfile",
      "[ ] [ ] optionreadfile(self, fileName, priority=None)",
      "[ ] [ ] options(self, cnf, kw=None)",
      "[ ] Other Methods by Class",
      "[ ] QTE GUI \u2014 Overview",
      "[ ] [ ] pack",
      "[ ] [ ] pack(self, cnf={}, kw)",
      "[ ] [ ] packconfigure",
      "[ ] [ ] packconfigure(self, cnf={}, kw)",
      "[ ] [ ] packforget",
      "[ ] [ ] packforget(self)",
      "[ ] [ ] packinfo",
      "[ ] [ ] packinfo(self)",
      "[ ] [ ] packpropagate",
      "[ ] [ ] packpropagate(self, flag=['noarg'])",
      "[ ] [ ] packslaves",
      "[ ] [ ] packslaves(self)",
      "[ ] Payload \u2014 demo a basis-state payload flow and report capacity",
      "[ ] QTE Payload Flow MVP (Amplitudes + Entropy Certificates)",
      "[ ] PayloadTab",
      "[ ] [ ] place",
      "[ ] [ ] place(self, cnf={}, kw)",
      "[ ] [ ] placeconfigure",
      "[ ] [ ] placeconfigure(self, cnf={}, kw)",
      "[ ] [ ] placeforget",
      "[ ] [ ] placeforget(self)",
      "[ ] [ ] placeinfo",
      "[ ] [ ] placeinfo(self)",
      "[ ] [ ] placeslaves",
      "[ ] [ ] placeslaves(self)",
      "[ ] Polylog",
      "[ ] QFT[f(x); N=<pow2>; a=<start>; b=<end>; ifft] \u2014 sample on [a,b], IFFT to register.",
      "[ ] a prep circuit that initializes the Active statevector.",
      "[ ] Present in class",
      "[ ] present: True",
      "[ ] Principal branch used near the real axis.",
      "[ ] [ ] propagate",
      "[ ] [ ] propagate(self, flag=['noarg'])",
      "[ ] QTECACHE=1",
      "[ ] qtecall",
      "[ ] QTEGUI API Map",
      "[ ] QTEGUI API Map (v2)",
      "[ ] QTEGUI API Map (v3)",
      "[ ] QTEGUI API Map (v4)",
      "[ ] QTEGUI API Map (v5)",
      "[ ] QTEGUI Function Checklist",
      "[ ] QTEGUI Function Checklist (v2)",
      "[ ] QTEGUI Function Checklist (v3)",
      "[ ] QTEGUI Function Checklist (v4)",
      "[ ] QTEGUILite classes (if present)",
      "[ ] QTEGUILite public methods",
      "[ ] QTEGUILite snapshot",
      "[ ] QTEGUI.py contains class QTEGUI: yes",
      "[ ] QTEGUIinitandwire",
      "[ ] QTEPOLYLOGBACKEND={auto,mp,series}",
      "[ ] Quickstart",
      "[ ] [ ] quit",
      "[ ] [ ] quit(self)",
      "[ ] Rail mapping",
      "[ ] [ ] reportexception(self)",
      "[ ] Reverse bits \u2014 flip wire order",
      "[ ] QTE GUI \u2014 Roadmap",
      "[ ] Roadmap: QTEGUIROADMAP.md",
      "[ ] [ ] root(self)",
      "[ ] [ ] rowconfigure",
      "[ ] [ ] rowconfigure(self, index, cnf={}, kw)",
      "[ ] [ ] rundemo",
      "[ ] [ ] rundemo(self, n: int = 6, v: int = 13, key: bytes = b'key', tamper: bool = False)",
      "[ ] [ ] savecertificate",
      "[ ] [ ] savecertificate(self, path: Optional[str] = None) -> Optional[str]",
      "[ ] [ ] selectionclear",
      "[ ] [ ] selectionclear(self, kw)",
      "[ ] [ ] selectionget",
      "[ ] [ ] selectionget(self, kw)",
      "[ ] [ ] selectionhandle",
      "[ ] [ ] selectionhandle(self, command, kw)",
      "[ ] [ ] selectionown",
      "[ ] [ ] selectionown(self, kw)",
      "[ ] [ ] selectionownget",
      "[ ] [ ] selectionownget(self, kw)",
      "[ ] [ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] [ ] state(self, statespec=None)",
      "[ ] [ ] send",
      "[ ] [ ] send(self, interp, cmd, args)",
      "[ ] [ ] setup(self, master, cnf)",
      "[ ] [ ] setvar",
      "[ ] [ ] setvar(self, name='PYVAR', value='1')",
      "[ ] Show Summary \u2014 quick numeric circuit summary (ops, depth, size)",
      "[ ] [ ] size",
      "[ ] [ ] size(self)",
      "[ ] [ ] slaves",
      "[ ] [ ] slaves(self)",
      "[ ] Smoke/batch",
      "[ ] Tabs (from source)",
      "[ ] In source but NOT on class (investigate / patch binding)",
      "[ ] In source but not found on class (investigate stubs/patching)",
      "[ ] Source scan",
      "[ ] [ ] spectrum",
      "[ ] Spectrum \u2014 FFT metrics (DC, entropy bits, flatness)",
      "[ ] [ ] spectrum(self, a: numpy.ndarray) -> Dict[str, Any]",
      "[ ] SpectrumTab",
      "[ ] [ ] substitute(self, args)",
      "[ ] Syntax: Li(s,z) / polylog(s, z) (complex s,z supported).",
      "[ ] tabswired: True",
      "[ ] The text drawer is useful in headless CI.",
      "[ ] Theoretical checks",
      "[ ] Tk imports guarded: likely",
      "[ ] [ ] tkbisque",
      "[ ] [ ] tkbisque(self)",
      "[ ] [ ] tkfocusFollowsMouse",
      "[ ] [ ] tkfocusFollowsMouse(self)",
      "[ ] [ ] tkfocusNext",
      "[ ] [ ] tkfocusNext(self)",
      "[ ] [ ] tkfocusPrev",
      "[ ] [ ] tkfocusPrev(self)",
      "[ ] [ ] tkraise",
      "[ ] [ ] tkraise(self, aboveThis=None)",
      "[ ] [ ] tksetPalette",
      "[ ] [ ] tksetPalette(self, args, kw)",
      "[ ] [ ] tkstrictMotif",
      "[ ] [ ] tkstrictMotif(self, boolean=None)",
      "[ ] TOMOOK defined: yes",
      "[ ] Top-level functions",
      "[ ] Top-level functions (QTEGUI.py)",
      "[ ] Transforms (QFT)",
      "[ ] [ ] unbind",
      "[ ] [ ] unbind(self, sequence, funcid=None)",
      "[ ] [ ] unbindall",
      "[ ] [ ] unbindall(self, sequence)",
      "[ ] [ ] unbindclass",
      "[ ] [ ] unbindclass(self, className, sequence)",
      "[ ] [ ] update",
      "[ ] [ ] update(self)",
      "[ ] [ ] updateidletasks",
      "[ ] [ ] updateidletasks(self)",
      "[ ] series uses internal series (|z|<1) + Euler accel for z\u2208(-1,0)",
      "[ ] [ ] verifycertificate",
      "[ ] [ ] verifycertificate(self, path: str, atolbits: float = 1e-06)",
      "[ ] version \u2014 schema version (int)",
      "[ ] [ ] waitvar",
      "[ ] [ ] waitvar(self, name='PYVAR')",
      "[ ] [ ] waitvariable",
      "[ ] [ ] waitvariable(self, name='PYVAR')",
      "[ ] [ ] waitvisibility",
      "[ ] [ ] waitvisibility(self, window=None)",
      "[ ] [ ] waitwindow",
      "[ ] [ ] waitwindow(self, window=None)",
      "[ ] When \u201cdecompose initialize\u201d is on, the drawer uses decompose(reps=4).",
      "[ ] Figure width \u2014 width hint passed to the MPL drawer",
      "[ ] [ ] winfoatom",
      "[ ] [ ] winfoatom(self, name, displayof=0)",
      "[ ] [ ] winfoatomname",
      "[ ] [ ] winfoatomname(self, id, displayof=0)",
      "[ ] [ ] winfocells",
      "[ ] [ ] winfocells(self)",
      "[ ] [ ] winfochildren",
      "[ ] [ ] winfochildren(self)",
      "[ ] [ ] winfoclass",
      "[ ] [ ] winfoclass(self)",
      "[ ] [ ] winfocolormapfull",
      "[ ] [ ] winfocolormapfull(self)",
      "[ ] [ ] winfocontaining",
      "[ ] [ ] winfocontaining(self, rootX, rootY, displayof=0)",
      "[ ] [ ] winfodepth",
      "[ ] [ ] winfodepth(self)",
      "[ ] [ ] winfoexists",
      "[ ] [ ] winfoexists(self)",
      "[ ] [ ] winfofpixels",
      "[ ] [ ] winfofpixels(self, number)",
      "[ ] [ ] winfogeometry",
      "[ ] [ ] winfogeometry(self)",
      "[ ] [ ] winfoheight",
      "[ ] [ ] winfoheight(self)",
      "[ ] [ ] winfoid",
      "[ ] [ ] winfoid(self)",
      "[ ] [ ] winfointerps",
      "[ ] [ ] winfointerps(self, displayof=0)",
      "[ ] [ ] winfoismapped",
      "[ ] [ ] winfoismapped(self)",
      "[ ] [ ] winfomanager",
      "[ ] [ ] winfomanager(self)",
      "[ ] [ ] winfoname",
      "[ ] [ ] winfoname(self)",
      "[ ] [ ] winfoparent",
      "[ ] [ ] winfoparent(self)",
      "[ ] [ ] winfopathname",
      "[ ] [ ] winfopathname(self, id, displayof=0)",
      "[ ] [ ] winfopixels",
      "[ ] [ ] winfopixels(self, number)",
      "[ ] [ ] winfopointerx",
      "[ ] [ ] winfopointerx(self)",
      "[ ] [ ] winfopointerxy",
      "[ ] [ ] winfopointerxy(self)",
      "[ ] [ ] winfopointery",
      "[ ] [ ] winfopointery(self)",
      "[ ] [ ] winforeqheight",
      "[ ] [ ] winforeqheight(self)",
      "[ ] [ ] winforeqwidth",
      "[ ] [ ] winforeqwidth(self)",
      "[ ] [ ] winforgb",
      "[ ] [ ] winforgb(self, color)",
      "[ ] [ ] winforootx",
      "[ ] [ ] winforootx(self)",
      "[ ] [ ] winforooty",
      "[ ] [ ] winforooty(self)",
      "[ ] [ ] winfoscreen",
      "[ ] [ ] winfoscreen(self)",
      "[ ] [ ] winfoscreencells",
      "[ ] [ ] winfoscreencells(self)",
      "[ ] [ ] winfoscreendepth",
      "[ ] [ ] winfoscreendepth(self)",
      "[ ] [ ] winfoscreenheight",
      "[ ] [ ] winfoscreenheight(self)",
      "[ ] [ ] winfoscreenmmheight",
      "[ ] [ ] winfoscreenmmheight(self)",
      "[ ] [ ] winfoscreenmmwidth",
      "[ ] [ ] winfoscreenmmwidth(self)",
      "[ ] [ ] winfoscreenvisual",
      "[ ] [ ] winfoscreenvisual(self)",
      "[ ] [ ] winfoscreenwidth",
      "[ ] [ ] winfoscreenwidth(self)",
      "[ ] [ ] winfoserver",
      "[ ] [ ] winfoserver(self)",
      "[ ] [ ] winfotoplevel",
      "[ ] [ ] winfotoplevel(self)",
      "[ ] [ ] winfoviewable",
      "[ ] [ ] winfoviewable(self)",
      "[ ] [ ] winfovisual",
      "[ ] [ ] winfovisual(self)",
      "[ ] [ ] winfovisualid",
      "[ ] [ ] winfovisualid(self)",
      "[ ] [ ] winfovisualsavailable",
      "[ ] [ ] winfovisualsavailable(self, includeids=False)",
      "[ ] [ ] winfovrootheight",
      "[ ] [ ] winfovrootheight(self)",
      "[ ] [ ] winfovrootwidth",
      "[ ] [ ] winfovrootwidth(self)",
      "[ ] [ ] winfovrootx",
      "[ ] [ ] winfovrootx(self)",
      "[ ] [ ] winfovrooty",
      "[ ] [ ] winfovrooty(self)",
      "[ ] [ ] winfowidth",
      "[ ] [ ] winfowidth(self)",
      "[ ] [ ] winfox",
      "[ ] [ ] winfox(self)",
      "[ ] [ ] winfoy",
      "[ ] [ ] winfoy(self)",
      "[ ] Wiring to Lite tabs present in QTEGUI: yes",
      "[ ] Wrap width (fold) \u2014 line-wrap threshold for drawer",
      "[ ] FFT wrapper fftfromgui used: yes",
      "[ ] alltoall",
      "[ ] amplitudeentropy",
      "[ ] qteqftamplitudes",
      "[ ] analyzetensorstructure",
      "[ ] qteapplyegfweights",
      "[ ] QTEapplyrail",
      "[ ] arctaninv",
      "[ ] asciisafe",
      "[ ] qteautoradius",
      "[ ] backend",
      "[ ] QTEBern",
      "[ ] QTEBernPoly",
      "[ ] qtebesselJnvalue",
      "[ ] qtebesselJnterms",
      "[ ] qtebesseltermsvector",
      "[ ] blockmasks",
      "[ ] build",
      "[ ] buildqtefilename",
      "[ ] buildsbrv",
      "[ ] buildui",
      "[ ] qtecacheclear",
      "[ ] qtecacheenable",
      "[ ] qtecacheenabled",
      "[ ] capacitybits",
      "[ ] carriers",
      "[ ] catalanvalue",
      "[ ] cauchyproduct",
      "[ ] centerhann",
      "[ ] savecertificate",
      "[ ] chain",
      "[ ] champernowne10value",
      "[ ] runcircuit",
      "[ ] collectimports",
      "[ ] ascomplex",
      "[ ] composedualrail",
      "[ ] computeseriesvalue",
      "[ ] QTEcomputeseriesvalueanys",
      "[ ] computecertificate",
      "[ ] computemetrics",
      "[ ] computefftspectrumfromamplitudes",
      "[ ] constants",
      "[ ] decodesrdiq",
      "[ ] decomposedualrail",
      "[ ] qtedetectrailandstrip",
      "[ ] digitqromcircuit",
      "[ ] dirichletconvolution",
      "[ ] egfproduct",
      "[ ] encodeentangledconstants",
      "[ ] encodesrdancilla",
      "[ ] encodesrdiq",
      "[ ] ensembleentropy",
      "[ ] ensemblevonneumannentropy",
      "[ ] ensureunit",
      "[ ] enttagfromentropies",
      "[ ] entangleseriesregisters",
      "[ ] entangleseriesmulti",
      "[ ] Entanglement",
      "[ ] entropiesZX",
      "[ ] Entropy",
      "[ ] entropy certificate",
      "[ ] entropycertificatefromamplitudes",
      "[ ] entropycertificatepack",
      "[ ] entropycertificateverify",
      "[ ] entropyfromsvals",
      "[ ] EntropyTab",
      "[ ] erfcoefficient",
      "[ ] qteeta",
      "[ ] qteevalexpr",
      "[ ] qteevalpolylog",
      "[ ] QTEevalpolylogint",
      "[ ] qteevalzetaint",
      "[ ] evenoddmasks",
      "[ ] exppivalue",
      "[ ] qteexprpreproc",
      "[ ] qteextrasencode",
      "[ ] qteextrasmetrics",
      "[ ] fidelityupperbound",
      "[ ] firstof",
      "[ ] formatconstantlist",
      "[ ] formatconstanttoken",
      "[ ] gammavalue",
      "[ ] gelfondvalue",
      "[ ] generateseriesencoding",
      "[ ] getseriesamplitudes",
      "[ ] QTEgetseriesamplitudessafe",
      "[ ] getbackend",
      "[ ] getibmstatus",
      "[ ] hadamardproduct",
      "[ ] hadamardtestexpectation",
      "[ ] QTEhasrail",
      "[ ] IBM",
      "[ ] indexqftspectrumcircuit",
      "[ ] init",
      "[ ] initializeibm",
      "[ ] inttobasisamplitudes",
      "[ ] iterpyfiles",
      "[ ] qtej0vector",
      "[ ] J0maclaurincoeff",
      "[ ] QTEj0termsvector",
      "[ ] Jnumaclaurincoeff",
      "[ ] l2norm",
      "[ ] l2normalize",
      "[ ] lcucombine",
      "[ ] nfromlen",
      "[ ] liouvillevalue",
      "[ ] listibmbackends",
      "[ ] ln2value",
      "[ ] QTElogp",
      "[ ] QTElogbranch",
      "[ ] qtemaclaurincoeffs",
      "[ ] qteismaclaurinlabel",
      "[ ] main",
      "[ ] makediagmask",
      "[ ] makelabel",
      "[ ] measuredistribution",
      "[ ] method",
      "[ ] minentropybits",
      "[ ] norm",
      "[ ] normorzero",
      "[ ] normalizepower",
      "[ ] QTEORIGcomputeseriesvalue",
      "[ ] padtruncate",
      "[ ] qteparsebessellabel",
      "[ ] parsecomplextoken",
      "[ ] parseqtefilename",
      "[ ] QTEparseJnvalue",
      "[ ] qteparseqftlabel",
      "[ ] qteparsemaclaurin",
      "[ ] parsemultilabel",
      "[ ] parsepolylog",
      "[ ] qteparsepolyloglabel",
      "[ ] qteparsezetalabel",
      "[ ] payload",
      "[ ] PayloadTab",
      "[ ] performschmidtdecomposition",
      "[ ] periodicphasestate",
      "[ ] phasecoherence",
      "[ ] valuephaseestimationcircuit",
      "[ ] phivalue",
      "[ ] pivalue",
      "[ ] pickproviderbackend",
      "[ ] pickruntimebackend",
      "[ ] polylogseries",
      "[ ] qtepolylogaltrealneg",
      "[ ] QTEpolyloganys",
      "[ ] qtepolylogeuler",
      "[ ] qtepolylogeuleralt",
      "[ ] qtepolylogeval",
      "[ ] QTEpolylogseriesint",
      "[ ] qtepolylogintegercont",
      "[ ] QTEpolyloginversionint",
      "[ ] qtepolylogknown",
      "[ ] QTEpolylogmuexpansionint",
      "[ ] qtepolylogpower",
      "[ ] preparestate",
      "[ ] QTEPREVcomputeseriesvalue",
      "[ ] printheads",
      "[ ] printtopbasisstates",
      "[ ] proposerequirements",
      "[ ] qfipurestate",
      "[ ] QTEGUI",
      "[ ] quantizemsb",
      "[ ] QTEisrail",
      "[ ] realish",
      "[ ] reconstructsbrv",
      "[ ] safe",
      "[ ] safelabelmethod",
      "[ ] safename",
      "[ ] schmidtentropiesallcuts",
      "[ ] schmidtentropy",
      "[ ] scrambleamplitudes",
      "[ ] SeriesMetrics",
      "[ ] SeriesSpec",
      "[ ] shannonbits",
      "[ ] shannonbitsfromcounts",
      "[ ] shannonentropybits",
      "[ ] signsplit",
      "[ ] simulatestatevector",
      "[ ] spectralentropyfft",
      "[ ] spectralentropyhankel",
      "[ ] spectralflatnessfft",
      "[ ] spectralmetrics",
      "[ ] qftspectrumfromseries",
      "[ ] spectrummetrics",
      "[ ] SpectrumTab",
      "[ ] qtesplitrails",
      "[ ] star",
      "[ ] savestatevector",
      "[ ] savestatevectordialog",
      "[ ] QTEstriprail",
      "[ ] suggestname",
      "[ ] termse",
      "[ ] termscatalan",
      "[ ] termsgamma",
      "[ ] termsJ0",
      "[ ] termsln2",
      "[ ] termsphi",
      "[ ] termspi",
      "[ ] termszeta2",
      "[ ] termszeta3",
      "[ ] testbesselvalues",
      "[ ] testj0egffinite",
      "[ ] testmaclaurinsyntax",
      "[ ] testpolylogcore",
      "[ ] testqftrailnorm",
      "[ ] Tomography",
      "[ ] qftunitary",
      "[ ] unscrambleamplitudes",
      "[ ] verifycertificate",
      "[ ] vonneumannentropybits",
      "[ ] QTEzetavalue",
      "[ ] qtezetaeven2n",
      "[ ] qtevaluezetaint",
      "[ ] QTEzetaatnegint",
      "[ ] zeta2value",
      "[ ] zeta3value",
      "[ ] testbellcertificateandverify",
      "[ ] testbellstateentropyone",
      "[ ] testboostpreservesminkowskimetric",
      "[ ] testcountsshannonmatchesexactforuniform4",
      "[ ] testqtedocsexist",
      "[ ] testensembleentropypureandmixed",
      "[ ] testensembleentropytwoorthogonalstatesis1bit",
      "[ ] testentropicuncertaintyMUB",
      "[ ] testentropytabapisignatures",
      "[ ] testentropytabhassaveandverify",
      "[ ] testentropytabcomputecertificate",
      "[ ] testtabsimportable",
      "[ ] testlitetabsclassespresent",
      "[ ] testlitetabspresent",
      "[ ] testmaassenuffinkboundzqft",
      "[ ] testpayloaddemorunsheadless",
      "[ ] testpayloaddemoreturnscapacityevenwithoutdeps",
      "[ ] testproductstateentropyzero",
      "[ ] testqteguiimports",
      "[ ] testqteguiimportsandclass",
      "[ ] testroundtripcertok",
      "[ ] testschmidtdecompositionconsistency",
      "[ ] testfftshapesandnorm",
      "[ ] testsinmaclaurinfirst15terms",
      "[ ] testsinsquaredseriesconsistency",
      "[ ] testtwoboostscomposeandpreserve",
      "[ ] testfftwrapperrunsandshapesok"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/cli.md": {
    "headings": [
      "CLI",
      "Examples"
    ],
    "bullets": [
      "auto prefers mpmath; else series/Euler accel",
      "mp forces mpmath.polylog",
      "series uses internal series (|z|<1) + Euler accel for z\u2208(-1,0)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_API_MAP_v3.md": {
    "headings": [
      "QTEGUI API Map (v3)",
      "Tabs (from source)",
      "Event Handlers (from source)",
      "Introspection Cross-check (class methods)",
      "Present in class",
      "Tabs",
      "Handlers",
      "In source but **not** found on class (investigate stubs/patching)"
    ],
    "bullets": [
      "(none)",
      "(none)",
      "(none)",
      "(none)",
      "(none)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_FUNCTION_CHECKLIST_v4.md": {
    "headings": [
      "QTEGUI Function Checklist (v4)",
      "Tabs",
      "Handlers"
    ],
    "bullets": [
      "(none)",
      "(none)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/dev.md": {
    "headings": [
      "Dev notes",
      "Smoke/batch",
      "Cache API",
      "Env"
    ],
    "bullets": [
      "QTEPOLYLOGBACKEND={auto,mp,series}",
      "QTECACHE=1"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_API_MAP_v2.md": {
    "headings": [
      "QTEGUI API Map (v2)",
      "Feature Flags",
      "Top-level functions (QTEGUI.py)",
      "Classes and methods (QTEGUI.py)",
      "Tabs",
      "Event Handlers (`on_*`)",
      "QTEGUI_Lite classes (if present)",
      "EntropyTab",
      "SpectrumTab",
      "PayloadTab"
    ],
    "bullets": [
      "hasFigureCanvasTkAgg: True",
      "hastkimport: True",
      "hasttkimport: True",
      "haseval: False",
      "hasTOMOOK: True",
      "hasfftwrapper: True",
      "tabswired: True",
      "importsentropylab: True",
      "importsharmonicanalysis: True",
      "importsquantumembedding: True",
      "QTEGUIinitandwire",
      "qtecall",
      "(no buildtab methods found)",
      "(none)",
      "present: True",
      "init",
      "buildui",
      "computecertificate",
      "savecertificate",
      "verifycertificate",
      "init",
      "buildui",
      "spectrum",
      "init",
      "buildui",
      "rundemo"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI.md": {
    "headings": [
      "QTE GUI \u2014 Overview",
      "Tabs (currently wired)",
      "Quickstart"
    ],
    "bullets": [
      "API Map: QTEGUIAPIMAPfinal.md",
      "Function Checklist: QTEGUIFUNCTIONCHECKLISTfinal.md",
      "Roadmap: QTEGUIROADMAP.md",
      "Entropy \u2014 save/verify entropy certificates",
      "Spectrum \u2014 FFT metrics (DC, entropy bits, flatness)",
      "Payload \u2014 demo a basis-state payload flow and report capacity"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_FUNCTION_CHECKLIST_v3.md": {
    "headings": [
      "QTEGUI Function Checklist (v3)",
      "Tabs (from source)",
      "Event Handlers (from source)",
      "QTEGUI_Lite public methods",
      "EntropyTab",
      "SpectrumTab",
      "PayloadTab"
    ],
    "bullets": [
      "(none)",
      "(none)",
      "[ ] after",
      "[ ] aftercancel",
      "[ ] afteridle",
      "[ ] anchor",
      "[ ] bbox",
      "[ ] bell",
      "[ ] bind",
      "[ ] bindall",
      "[ ] bindclass",
      "[ ] bindtags",
      "[ ] cget",
      "[ ] clipboardappend",
      "[ ] clipboardclear",
      "[ ] clipboardget",
      "[ ] columnconfigure",
      "[ ] computecertificate",
      "[ ] config",
      "[ ] configure",
      "[ ] deletecommand",
      "[ ] destroy",
      "[ ] eventadd",
      "[ ] eventdelete",
      "[ ] eventgenerate",
      "[ ] eventinfo",
      "[ ] focus",
      "[ ] focusdisplayof",
      "[ ] focusforce",
      "[ ] focusget",
      "[ ] focuslastfor",
      "[ ] focusset",
      "[ ] forget",
      "[ ] getboolean",
      "[ ] getdouble",
      "[ ] getint",
      "[ ] getvar",
      "[ ] grabcurrent",
      "[ ] grabrelease",
      "[ ] grabset",
      "[ ] grabsetglobal",
      "[ ] grabstatus",
      "[ ] grid",
      "[ ] gridanchor",
      "[ ] gridbbox",
      "[ ] gridcolumnconfigure",
      "[ ] gridconfigure",
      "[ ] gridforget",
      "[ ] gridinfo",
      "[ ] gridlocation",
      "[ ] gridpropagate",
      "[ ] gridremove",
      "[ ] gridrowconfigure",
      "[ ] gridsize",
      "[ ] gridslaves",
      "[ ] identify",
      "[ ] imagenames",
      "[ ] imagetypes",
      "[ ] info",
      "[ ] instate",
      "[ ] keys",
      "[ ] lift",
      "[ ] location",
      "[ ] lower",
      "[ ] mainloop",
      "[ ] nametowidget",
      "[ ] optionadd",
      "[ ] optionclear",
      "[ ] optionget",
      "[ ] optionreadfile",
      "[ ] pack",
      "[ ] packconfigure",
      "[ ] packforget",
      "[ ] packinfo",
      "[ ] packpropagate",
      "[ ] packslaves",
      "[ ] place",
      "[ ] placeconfigure",
      "[ ] placeforget",
      "[ ] placeinfo",
      "[ ] placeslaves",
      "[ ] propagate",
      "[ ] quit",
      "[ ] register",
      "[ ] rowconfigure",
      "[ ] savecertificate",
      "[ ] selectionclear",
      "[ ] selectionget",
      "[ ] selectionhandle",
      "[ ] selectionown",
      "[ ] selectionownget",
      "[ ] send",
      "[ ] setvar",
      "[ ] size",
      "[ ] slaves",
      "[ ] state",
      "[ ] tkbisque",
      "[ ] tkfocusFollowsMouse",
      "[ ] tkfocusNext",
      "[ ] tkfocusPrev",
      "[ ] tksetPalette",
      "[ ] tkstrictMotif",
      "[ ] tkraise",
      "[ ] unbind",
      "[ ] unbindall",
      "[ ] unbindclass",
      "[ ] update",
      "[ ] updateidletasks",
      "[ ] verifycertificate",
      "[ ] waitvariable",
      "[ ] waitvisibility",
      "[ ] waitwindow",
      "[ ] waitvar",
      "[ ] winfoatom",
      "[ ] winfoatomname",
      "[ ] winfocells",
      "[ ] winfochildren",
      "[ ] winfoclass",
      "[ ] winfocolormapfull",
      "[ ] winfocontaining",
      "[ ] winfodepth",
      "[ ] winfoexists",
      "[ ] winfofpixels",
      "[ ] winfogeometry",
      "[ ] winfoheight",
      "[ ] winfoid",
      "[ ] winfointerps",
      "[ ] winfoismapped",
      "[ ] winfomanager",
      "[ ] winfoname",
      "[ ] winfoparent",
      "[ ] winfopathname",
      "[ ] winfopixels",
      "[ ] winfopointerx",
      "[ ] winfopointerxy",
      "[ ] winfopointery",
      "[ ] winforeqheight",
      "[ ] winforeqwidth",
      "[ ] winforgb",
      "[ ] winforootx",
      "[ ] winforooty",
      "[ ] winfoscreen",
      "[ ] winfoscreencells",
      "[ ] winfoscreendepth",
      "[ ] winfoscreenheight",
      "[ ] winfoscreenmmheight",
      "[ ] winfoscreenmmwidth",
      "[ ] winfoscreenvisual",
      "[ ] winfoscreenwidth",
      "[ ] winfoserver",
      "[ ] winfotoplevel",
      "[ ] winfoviewable",
      "[ ] winfovisual",
      "[ ] winfovisualid",
      "[ ] winfovisualsavailable",
      "[ ] winfovrootheight",
      "[ ] winfovrootwidth",
      "[ ] winfovrootx",
      "[ ] winfovrooty",
      "[ ] winfowidth",
      "[ ] winfox",
      "[ ] winfoy",
      "[ ] after",
      "[ ] aftercancel",
      "[ ] afteridle",
      "[ ] anchor",
      "[ ] bbox",
      "[ ] bell",
      "[ ] bind",
      "[ ] bindall",
      "[ ] bindclass",
      "[ ] bindtags",
      "[ ] cget",
      "[ ] clipboardappend",
      "[ ] clipboardclear",
      "[ ] clipboardget",
      "[ ] columnconfigure",
      "[ ] config",
      "[ ] configure",
      "[ ] deletecommand",
      "[ ] destroy",
      "[ ] eventadd",
      "[ ] eventdelete",
      "[ ] eventgenerate",
      "[ ] eventinfo",
      "[ ] focus",
      "[ ] focusdisplayof",
      "[ ] focusforce",
      "[ ] focusget",
      "[ ] focuslastfor",
      "[ ] focusset",
      "[ ] forget",
      "[ ] getboolean",
      "[ ] getdouble",
      "[ ] getint",
      "[ ] getvar",
      "[ ] grabcurrent",
      "[ ] grabrelease",
      "[ ] grabset",
      "[ ] grabsetglobal",
      "[ ] grabstatus",
      "[ ] grid",
      "[ ] gridanchor",
      "[ ] gridbbox",
      "[ ] gridcolumnconfigure",
      "[ ] gridconfigure",
      "[ ] gridforget",
      "[ ] gridinfo",
      "[ ] gridlocation",
      "[ ] gridpropagate",
      "[ ] gridremove",
      "[ ] gridrowconfigure",
      "[ ] gridsize",
      "[ ] gridslaves",
      "[ ] identify",
      "[ ] imagenames",
      "[ ] imagetypes",
      "[ ] info",
      "[ ] instate",
      "[ ] keys",
      "[ ] lift",
      "[ ] location",
      "[ ] lower",
      "[ ] mainloop",
      "[ ] nametowidget",
      "[ ] optionadd",
      "[ ] optionclear",
      "[ ] optionget",
      "[ ] optionreadfile",
      "[ ] pack",
      "[ ] packconfigure",
      "[ ] packforget",
      "[ ] packinfo",
      "[ ] packpropagate",
      "[ ] packslaves",
      "[ ] place",
      "[ ] placeconfigure",
      "[ ] placeforget",
      "[ ] placeinfo",
      "[ ] placeslaves",
      "[ ] propagate",
      "[ ] quit",
      "[ ] register",
      "[ ] rowconfigure",
      "[ ] selectionclear",
      "[ ] selectionget",
      "[ ] selectionhandle",
      "[ ] selectionown",
      "[ ] selectionownget",
      "[ ] send",
      "[ ] setvar",
      "[ ] size",
      "[ ] slaves",
      "[ ] spectrum",
      "[ ] state",
      "[ ] tkbisque",
      "[ ] tkfocusFollowsMouse",
      "[ ] tkfocusNext",
      "[ ] tkfocusPrev",
      "[ ] tksetPalette",
      "[ ] tkstrictMotif",
      "[ ] tkraise",
      "[ ] unbind",
      "[ ] unbindall",
      "[ ] unbindclass",
      "[ ] update",
      "[ ] updateidletasks",
      "[ ] waitvariable",
      "[ ] waitvisibility",
      "[ ] waitwindow",
      "[ ] waitvar",
      "[ ] winfoatom",
      "[ ] winfoatomname",
      "[ ] winfocells",
      "[ ] winfochildren",
      "[ ] winfoclass",
      "[ ] winfocolormapfull",
      "[ ] winfocontaining",
      "[ ] winfodepth",
      "[ ] winfoexists",
      "[ ] winfofpixels",
      "[ ] winfogeometry",
      "[ ] winfoheight",
      "[ ] winfoid",
      "[ ] winfointerps",
      "[ ] winfoismapped",
      "[ ] winfomanager",
      "[ ] winfoname",
      "[ ] winfoparent",
      "[ ] winfopathname",
      "[ ] winfopixels",
      "[ ] winfopointerx",
      "[ ] winfopointerxy",
      "[ ] winfopointery",
      "[ ] winforeqheight",
      "[ ] winforeqwidth",
      "[ ] winforgb",
      "[ ] winforootx",
      "[ ] winforooty",
      "[ ] winfoscreen",
      "[ ] winfoscreencells",
      "[ ] winfoscreendepth",
      "[ ] winfoscreenheight",
      "[ ] winfoscreenmmheight",
      "[ ] winfoscreenmmwidth",
      "[ ] winfoscreenvisual",
      "[ ] winfoscreenwidth",
      "[ ] winfoserver",
      "[ ] winfotoplevel",
      "[ ] winfoviewable",
      "[ ] winfovisual",
      "[ ] winfovisualid",
      "[ ] winfovisualsavailable",
      "[ ] winfovrootheight",
      "[ ] winfovrootwidth",
      "[ ] winfovrootx",
      "[ ] winfovrooty",
      "[ ] winfowidth",
      "[ ] winfox",
      "[ ] winfoy",
      "[ ] after",
      "[ ] aftercancel",
      "[ ] afteridle",
      "[ ] anchor",
      "[ ] bbox",
      "[ ] bell",
      "[ ] bind",
      "[ ] bindall",
      "[ ] bindclass",
      "[ ] bindtags",
      "[ ] cget",
      "[ ] clipboardappend",
      "[ ] clipboardclear",
      "[ ] clipboardget",
      "[ ] columnconfigure",
      "[ ] config",
      "[ ] configure",
      "[ ] deletecommand",
      "[ ] destroy",
      "[ ] eventadd",
      "[ ] eventdelete",
      "[ ] eventgenerate",
      "[ ] eventinfo",
      "[ ] focus",
      "[ ] focusdisplayof",
      "[ ] focusforce",
      "[ ] focusget",
      "[ ] focuslastfor",
      "[ ] focusset",
      "[ ] forget",
      "[ ] getboolean",
      "[ ] getdouble",
      "[ ] getint",
      "[ ] getvar",
      "[ ] grabcurrent",
      "[ ] grabrelease",
      "[ ] grabset",
      "[ ] grabsetglobal",
      "[ ] grabstatus",
      "[ ] grid",
      "[ ] gridanchor",
      "[ ] gridbbox",
      "[ ] gridcolumnconfigure",
      "[ ] gridconfigure",
      "[ ] gridforget",
      "[ ] gridinfo",
      "[ ] gridlocation",
      "[ ] gridpropagate",
      "[ ] gridremove",
      "[ ] gridrowconfigure",
      "[ ] gridsize",
      "[ ] gridslaves",
      "[ ] identify",
      "[ ] imagenames",
      "[ ] imagetypes",
      "[ ] info",
      "[ ] instate",
      "[ ] keys",
      "[ ] lift",
      "[ ] location",
      "[ ] lower",
      "[ ] mainloop",
      "[ ] nametowidget",
      "[ ] optionadd",
      "[ ] optionclear",
      "[ ] optionget",
      "[ ] optionreadfile",
      "[ ] pack",
      "[ ] packconfigure",
      "[ ] packforget",
      "[ ] packinfo",
      "[ ] packpropagate",
      "[ ] packslaves",
      "[ ] place",
      "[ ] placeconfigure",
      "[ ] placeforget",
      "[ ] placeinfo",
      "[ ] placeslaves",
      "[ ] propagate",
      "[ ] quit",
      "[ ] register",
      "[ ] rowconfigure",
      "[ ] rundemo",
      "[ ] selectionclear",
      "[ ] selectionget",
      "[ ] selectionhandle",
      "[ ] selectionown",
      "[ ] selectionownget",
      "[ ] send",
      "[ ] setvar",
      "[ ] size",
      "[ ] slaves",
      "[ ] state",
      "[ ] tkbisque",
      "[ ] tkfocusFollowsMouse",
      "[ ] tkfocusNext",
      "[ ] tkfocusPrev",
      "[ ] tksetPalette",
      "[ ] tkstrictMotif",
      "[ ] tkraise",
      "[ ] unbind",
      "[ ] unbindall",
      "[ ] unbindclass",
      "[ ] update",
      "[ ] updateidletasks",
      "[ ] waitvariable",
      "[ ] waitvisibility",
      "[ ] waitwindow",
      "[ ] waitvar",
      "[ ] winfoatom",
      "[ ] winfoatomname",
      "[ ] winfocells",
      "[ ] winfochildren",
      "[ ] winfoclass",
      "[ ] winfocolormapfull",
      "[ ] winfocontaining",
      "[ ] winfodepth",
      "[ ] winfoexists",
      "[ ] winfofpixels",
      "[ ] winfogeometry",
      "[ ] winfoheight",
      "[ ] winfoid",
      "[ ] winfointerps",
      "[ ] winfoismapped",
      "[ ] winfomanager",
      "[ ] winfoname",
      "[ ] winfoparent",
      "[ ] winfopathname",
      "[ ] winfopixels",
      "[ ] winfopointerx",
      "[ ] winfopointerxy",
      "[ ] winfopointery",
      "[ ] winforeqheight",
      "[ ] winforeqwidth",
      "[ ] winforgb",
      "[ ] winforootx",
      "[ ] winforooty",
      "[ ] winfoscreen",
      "[ ] winfoscreencells",
      "[ ] winfoscreendepth",
      "[ ] winfoscreenheight",
      "[ ] winfoscreenmmheight",
      "[ ] winfoscreenmmwidth",
      "[ ] winfoscreenvisual",
      "[ ] winfoscreenwidth",
      "[ ] winfoserver",
      "[ ] winfotoplevel",
      "[ ] winfoviewable",
      "[ ] winfovisual",
      "[ ] winfovisualid",
      "[ ] winfovisualsavailable",
      "[ ] winfovrootheight",
      "[ ] winfovrootwidth",
      "[ ] winfovrootx",
      "[ ] winfovrooty",
      "[ ] winfowidth",
      "[ ] winfox",
      "[ ] winfoy"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_API_MAP_v5.md": {
    "headings": [
      "QTEGUI API Map (v5)",
      "Source scan",
      "Tabs",
      "Handlers",
      "Class introspection",
      "Tabs",
      "Handlers"
    ],
    "bullets": [
      "(none)",
      "(none)",
      "(none)",
      "(none)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/PAYLOAD_FLOW_MVP.md": {
    "headings": [
      "QTE Payload Flow MVP (Amplitudes + Entropy Certificates)",
      "CLI"
    ],
    "bullets": []
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_API_MAP_final.md": {
    "headings": [
      "QTE GUI API Map (final)",
      "Entry Module",
      "Tabs & Methods (from `QTEGUI_Lite`)",
      "EntropyTab",
      "SpectrumTab",
      "PayloadTab"
    ],
    "bullets": [
      "QTEGUI.py contains class QTEGUI: yes",
      "It hosts tabs from QTEGUILite when available.",
      "Miscwinfogetint(self, x)",
      "Miscwinfoparseitem(self, t)",
      "bind(self, what, sequence, func, add, needcleanup=1)",
      "buildui(self)",
      "configure(self, cmd, cnf, kw)",
      "displayof(self, displayof)",
      "do(self, name, args=())",
      "getboolean(self, string)",
      "getconfigure(self, args)",
      "getconfigure1(self, args)",
      "getdoubles(self, string)",
      "getints(self, string)",
      "gridconfigure(self, command, index, cnf, kw)",
      "gridconvvalue(self, value)",
      "nametowidget(self, name)",
      "options(self, cnf, kw=None)",
      "register(self, func, subst=None, needcleanup=1)",
      "reportexception(self)",
      "root(self)",
      "setup(self, master, cnf)",
      "substitute(self, args)",
      "after(self, ms, func=None, args)",
      "aftercancel(self, id)",
      "afteridle(self, func, args)",
      "anchor(self, anchor=None)",
      "bbox(self, column=None, row=None, col2=None, row2=None)",
      "bell(self, displayof=0)",
      "bind(self, sequence=None, func=None, add=None)",
      "bindall(self, sequence=None, func=None, add=None)",
      "bindclass(self, className, sequence=None, func=None, add=None)",
      "bindtags(self, tagList=None)",
      "cget(self, key)",
      "clipboardappend(self, string, kw)",
      "clipboardclear(self, kw)",
      "clipboardget(self, kw)",
      "columnconfigure(self, index, cnf={}, kw)",
      "computecertificate(self)",
      "config(self, cnf=None, kw)",
      "configure(self, cnf=None, kw)",
      "deletecommand(self, name)",
      "destroy(self)",
      "eventadd(self, virtual, sequences)",
      "eventdelete(self, virtual, sequences)",
      "eventgenerate(self, sequence, kw)",
      "eventinfo(self, virtual=None)",
      "focus(self)",
      "focusdisplayof(self)",
      "focusforce(self)",
      "focusget(self)",
      "focuslastfor(self)",
      "focusset(self)",
      "forget(self)",
      "getboolean(self, s)",
      "getdouble(self, s)",
      "getint(self, s)",
      "getvar(self, name='PYVAR')",
      "grabcurrent(self)",
      "grabrelease(self)",
      "grabset(self)",
      "grabsetglobal(self)",
      "grabstatus(self)",
      "grid(self, cnf={}, kw)",
      "gridanchor(self, anchor=None)",
      "gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "gridcolumnconfigure(self, index, cnf={}, kw)",
      "gridconfigure(self, cnf={}, kw)",
      "gridforget(self)",
      "gridinfo(self)",
      "gridlocation(self, x, y)",
      "gridpropagate(self, flag=['noarg'])",
      "gridremove(self)",
      "gridrowconfigure(self, index, cnf={}, kw)",
      "gridsize(self)",
      "gridslaves(self, row=None, column=None)",
      "identify(self, x, y)",
      "imagenames(self)",
      "imagetypes(self)",
      "info(self)",
      "instate(self, statespec, callback=None, args, kw)",
      "keys(self)",
      "lift(self, aboveThis=None)",
      "location(self, x, y)",
      "lower(self, belowThis=None)",
      "mainloop(self, n=0)",
      "nametowidget(self, name)",
      "optionadd(self, pattern, value, priority=None)",
      "optionclear(self)",
      "optionget(self, name, className)",
      "optionreadfile(self, fileName, priority=None)",
      "pack(self, cnf={}, kw)",
      "packconfigure(self, cnf={}, kw)",
      "packforget(self)",
      "packinfo(self)",
      "packpropagate(self, flag=['noarg'])",
      "packslaves(self)",
      "place(self, cnf={}, kw)",
      "placeconfigure(self, cnf={}, kw)",
      "placeforget(self)",
      "placeinfo(self)",
      "placeslaves(self)",
      "propagate(self, flag=['noarg'])",
      "quit(self)",
      "register(self, func, subst=None, needcleanup=1)",
      "rowconfigure(self, index, cnf={}, kw)",
      "savecertificate(self, path: Optional[str] = None) -> Optional[str]",
      "selectionclear(self, kw)",
      "selectionget(self, kw)",
      "selectionhandle(self, command, kw)",
      "selectionown(self, kw)",
      "selectionownget(self, kw)",
      "send(self, interp, cmd, args)",
      "setvar(self, name='PYVAR', value='1')",
      "size(self)",
      "slaves(self)",
      "state(self, statespec=None)",
      "tkbisque(self)",
      "tkfocusFollowsMouse(self)",
      "tkfocusNext(self)",
      "tkfocusPrev(self)",
      "tksetPalette(self, args, kw)",
      "tkstrictMotif(self, boolean=None)",
      "tkraise(self, aboveThis=None)",
      "unbind(self, sequence, funcid=None)",
      "unbindall(self, sequence)",
      "unbindclass(self, className, sequence)",
      "update(self)",
      "updateidletasks(self)",
      "verifycertificate(self, path: str, atolbits: float = 1e-06)",
      "waitvariable(self, name='PYVAR')",
      "waitvisibility(self, window=None)",
      "waitwindow(self, window=None)",
      "waitvar(self, name='PYVAR')",
      "winfoatom(self, name, displayof=0)",
      "winfoatomname(self, id, displayof=0)",
      "winfocells(self)",
      "winfochildren(self)",
      "winfoclass(self)",
      "winfocolormapfull(self)",
      "winfocontaining(self, rootX, rootY, displayof=0)",
      "winfodepth(self)",
      "winfoexists(self)",
      "winfofpixels(self, number)",
      "winfogeometry(self)",
      "winfoheight(self)",
      "winfoid(self)",
      "winfointerps(self, displayof=0)",
      "winfoismapped(self)",
      "winfomanager(self)",
      "winfoname(self)",
      "winfoparent(self)",
      "winfopathname(self, id, displayof=0)",
      "winfopixels(self, number)",
      "winfopointerx(self)",
      "winfopointerxy(self)",
      "winfopointery(self)",
      "winforeqheight(self)",
      "winforeqwidth(self)",
      "winforgb(self, color)",
      "winforootx(self)",
      "winforooty(self)",
      "winfoscreen(self)",
      "winfoscreencells(self)",
      "winfoscreendepth(self)",
      "winfoscreenheight(self)",
      "winfoscreenmmheight(self)",
      "winfoscreenmmwidth(self)",
      "winfoscreenvisual(self)",
      "winfoscreenwidth(self)",
      "winfoserver(self)",
      "winfotoplevel(self)",
      "winfoviewable(self)",
      "winfovisual(self)",
      "winfovisualid(self)",
      "winfovisualsavailable(self, includeids=False)",
      "winfovrootheight(self)",
      "winfovrootwidth(self)",
      "winfovrootx(self)",
      "winfovrooty(self)",
      "winfowidth(self)",
      "winfox(self)",
      "winfoy(self)",
      "Miscwinfogetint(self, x)",
      "Miscwinfoparseitem(self, t)",
      "bind(self, what, sequence, func, add, needcleanup=1)",
      "buildui(self)",
      "configure(self, cmd, cnf, kw)",
      "displayof(self, displayof)",
      "do(self, name, args=())",
      "getboolean(self, string)",
      "getconfigure(self, args)",
      "getconfigure1(self, args)",
      "getdoubles(self, string)",
      "getints(self, string)",
      "gridconfigure(self, command, index, cnf, kw)",
      "gridconvvalue(self, value)",
      "nametowidget(self, name)",
      "options(self, cnf, kw=None)",
      "register(self, func, subst=None, needcleanup=1)",
      "reportexception(self)",
      "root(self)",
      "setup(self, master, cnf)",
      "substitute(self, args)",
      "after(self, ms, func=None, args)",
      "aftercancel(self, id)",
      "afteridle(self, func, args)",
      "anchor(self, anchor=None)",
      "bbox(self, column=None, row=None, col2=None, row2=None)",
      "bell(self, displayof=0)",
      "bind(self, sequence=None, func=None, add=None)",
      "bindall(self, sequence=None, func=None, add=None)",
      "bindclass(self, className, sequence=None, func=None, add=None)",
      "bindtags(self, tagList=None)",
      "cget(self, key)",
      "clipboardappend(self, string, kw)",
      "clipboardclear(self, kw)",
      "clipboardget(self, kw)",
      "columnconfigure(self, index, cnf={}, kw)",
      "config(self, cnf=None, kw)",
      "configure(self, cnf=None, kw)",
      "deletecommand(self, name)",
      "destroy(self)",
      "eventadd(self, virtual, sequences)",
      "eventdelete(self, virtual, sequences)",
      "eventgenerate(self, sequence, kw)",
      "eventinfo(self, virtual=None)",
      "focus(self)",
      "focusdisplayof(self)",
      "focusforce(self)",
      "focusget(self)",
      "focuslastfor(self)",
      "focusset(self)",
      "forget(self)",
      "getboolean(self, s)",
      "getdouble(self, s)",
      "getint(self, s)",
      "getvar(self, name='PYVAR')",
      "grabcurrent(self)",
      "grabrelease(self)",
      "grabset(self)",
      "grabsetglobal(self)",
      "grabstatus(self)",
      "grid(self, cnf={}, kw)",
      "gridanchor(self, anchor=None)",
      "gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "gridcolumnconfigure(self, index, cnf={}, kw)",
      "gridconfigure(self, cnf={}, kw)",
      "gridforget(self)",
      "gridinfo(self)",
      "gridlocation(self, x, y)",
      "gridpropagate(self, flag=['noarg'])",
      "gridremove(self)",
      "gridrowconfigure(self, index, cnf={}, kw)",
      "gridsize(self)",
      "gridslaves(self, row=None, column=None)",
      "identify(self, x, y)",
      "imagenames(self)",
      "imagetypes(self)",
      "info(self)",
      "instate(self, statespec, callback=None, args, kw)",
      "keys(self)",
      "lift(self, aboveThis=None)",
      "location(self, x, y)",
      "lower(self, belowThis=None)",
      "mainloop(self, n=0)",
      "nametowidget(self, name)",
      "optionadd(self, pattern, value, priority=None)",
      "optionclear(self)",
      "optionget(self, name, className)",
      "optionreadfile(self, fileName, priority=None)",
      "pack(self, cnf={}, kw)",
      "packconfigure(self, cnf={}, kw)",
      "packforget(self)",
      "packinfo(self)",
      "packpropagate(self, flag=['noarg'])",
      "packslaves(self)",
      "place(self, cnf={}, kw)",
      "placeconfigure(self, cnf={}, kw)",
      "placeforget(self)",
      "placeinfo(self)",
      "placeslaves(self)",
      "propagate(self, flag=['noarg'])",
      "quit(self)",
      "register(self, func, subst=None, needcleanup=1)",
      "rowconfigure(self, index, cnf={}, kw)",
      "selectionclear(self, kw)",
      "selectionget(self, kw)",
      "selectionhandle(self, command, kw)",
      "selectionown(self, kw)",
      "selectionownget(self, kw)",
      "send(self, interp, cmd, args)",
      "setvar(self, name='PYVAR', value='1')",
      "size(self)",
      "slaves(self)",
      "spectrum(self, a: numpy.ndarray) -> Dict[str, Any]",
      "state(self, statespec=None)",
      "tkbisque(self)",
      "tkfocusFollowsMouse(self)",
      "tkfocusNext(self)",
      "tkfocusPrev(self)",
      "tksetPalette(self, args, kw)",
      "tkstrictMotif(self, boolean=None)",
      "tkraise(self, aboveThis=None)",
      "unbind(self, sequence, funcid=None)",
      "unbindall(self, sequence)",
      "unbindclass(self, className, sequence)",
      "update(self)",
      "updateidletasks(self)",
      "waitvariable(self, name='PYVAR')",
      "waitvisibility(self, window=None)",
      "waitwindow(self, window=None)",
      "waitvar(self, name='PYVAR')",
      "winfoatom(self, name, displayof=0)",
      "winfoatomname(self, id, displayof=0)",
      "winfocells(self)",
      "winfochildren(self)",
      "winfoclass(self)",
      "winfocolormapfull(self)",
      "winfocontaining(self, rootX, rootY, displayof=0)",
      "winfodepth(self)",
      "winfoexists(self)",
      "winfofpixels(self, number)",
      "winfogeometry(self)",
      "winfoheight(self)",
      "winfoid(self)",
      "winfointerps(self, displayof=0)",
      "winfoismapped(self)",
      "winfomanager(self)",
      "winfoname(self)",
      "winfoparent(self)",
      "winfopathname(self, id, displayof=0)",
      "winfopixels(self, number)",
      "winfopointerx(self)",
      "winfopointerxy(self)",
      "winfopointery(self)",
      "winforeqheight(self)",
      "winforeqwidth(self)",
      "winforgb(self, color)",
      "winforootx(self)",
      "winforooty(self)",
      "winfoscreen(self)",
      "winfoscreencells(self)",
      "winfoscreendepth(self)",
      "winfoscreenheight(self)",
      "winfoscreenmmheight(self)",
      "winfoscreenmmwidth(self)",
      "winfoscreenvisual(self)",
      "winfoscreenwidth(self)",
      "winfoserver(self)",
      "winfotoplevel(self)",
      "winfoviewable(self)",
      "winfovisual(self)",
      "winfovisualid(self)",
      "winfovisualsavailable(self, includeids=False)",
      "winfovrootheight(self)",
      "winfovrootwidth(self)",
      "winfovrootx(self)",
      "winfovrooty(self)",
      "winfowidth(self)",
      "winfox(self)",
      "winfoy(self)",
      "Miscwinfogetint(self, x)",
      "Miscwinfoparseitem(self, t)",
      "bind(self, what, sequence, func, add, needcleanup=1)",
      "buildui(self)",
      "configure(self, cmd, cnf, kw)",
      "displayof(self, displayof)",
      "do(self, name, args=())",
      "getboolean(self, string)",
      "getconfigure(self, args)",
      "getconfigure1(self, args)",
      "getdoubles(self, string)",
      "getints(self, string)",
      "gridconfigure(self, command, index, cnf, kw)",
      "gridconvvalue(self, value)",
      "nametowidget(self, name)",
      "options(self, cnf, kw=None)",
      "register(self, func, subst=None, needcleanup=1)",
      "reportexception(self)",
      "root(self)",
      "setup(self, master, cnf)",
      "substitute(self, args)",
      "after(self, ms, func=None, args)",
      "aftercancel(self, id)",
      "afteridle(self, func, args)",
      "anchor(self, anchor=None)",
      "bbox(self, column=None, row=None, col2=None, row2=None)",
      "bell(self, displayof=0)",
      "bind(self, sequence=None, func=None, add=None)",
      "bindall(self, sequence=None, func=None, add=None)",
      "bindclass(self, className, sequence=None, func=None, add=None)",
      "bindtags(self, tagList=None)",
      "cget(self, key)",
      "clipboardappend(self, string, kw)",
      "clipboardclear(self, kw)",
      "clipboardget(self, kw)",
      "columnconfigure(self, index, cnf={}, kw)",
      "config(self, cnf=None, kw)",
      "configure(self, cnf=None, kw)",
      "deletecommand(self, name)",
      "destroy(self)",
      "eventadd(self, virtual, sequences)",
      "eventdelete(self, virtual, sequences)",
      "eventgenerate(self, sequence, kw)",
      "eventinfo(self, virtual=None)",
      "focus(self)",
      "focusdisplayof(self)",
      "focusforce(self)",
      "focusget(self)",
      "focuslastfor(self)",
      "focusset(self)",
      "forget(self)",
      "getboolean(self, s)",
      "getdouble(self, s)",
      "getint(self, s)",
      "getvar(self, name='PYVAR')",
      "grabcurrent(self)",
      "grabrelease(self)",
      "grabset(self)",
      "grabsetglobal(self)",
      "grabstatus(self)",
      "grid(self, cnf={}, kw)",
      "gridanchor(self, anchor=None)",
      "gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "gridcolumnconfigure(self, index, cnf={}, kw)",
      "gridconfigure(self, cnf={}, kw)",
      "gridforget(self)",
      "gridinfo(self)",
      "gridlocation(self, x, y)",
      "gridpropagate(self, flag=['noarg'])",
      "gridremove(self)",
      "gridrowconfigure(self, index, cnf={}, kw)",
      "gridsize(self)",
      "gridslaves(self, row=None, column=None)",
      "identify(self, x, y)",
      "imagenames(self)",
      "imagetypes(self)",
      "info(self)",
      "instate(self, statespec, callback=None, args, kw)",
      "keys(self)",
      "lift(self, aboveThis=None)",
      "location(self, x, y)",
      "lower(self, belowThis=None)",
      "mainloop(self, n=0)",
      "nametowidget(self, name)",
      "optionadd(self, pattern, value, priority=None)",
      "optionclear(self)",
      "optionget(self, name, className)",
      "optionreadfile(self, fileName, priority=None)",
      "pack(self, cnf={}, kw)",
      "packconfigure(self, cnf={}, kw)",
      "packforget(self)",
      "packinfo(self)",
      "packpropagate(self, flag=['noarg'])",
      "packslaves(self)",
      "place(self, cnf={}, kw)",
      "placeconfigure(self, cnf={}, kw)",
      "placeforget(self)",
      "placeinfo(self)",
      "placeslaves(self)",
      "propagate(self, flag=['noarg'])",
      "quit(self)",
      "register(self, func, subst=None, needcleanup=1)",
      "rowconfigure(self, index, cnf={}, kw)",
      "rundemo(self, n: int = 6, v: int = 13, key: bytes = b'key', tamper: bool = False)",
      "selectionclear(self, kw)",
      "selectionget(self, kw)",
      "selectionhandle(self, command, kw)",
      "selectionown(self, kw)",
      "selectionownget(self, kw)",
      "send(self, interp, cmd, args)",
      "setvar(self, name='PYVAR', value='1')",
      "size(self)",
      "slaves(self)",
      "state(self, statespec=None)",
      "tkbisque(self)",
      "tkfocusFollowsMouse(self)",
      "tkfocusNext(self)",
      "tkfocusPrev(self)",
      "tksetPalette(self, args, kw)",
      "tkstrictMotif(self, boolean=None)",
      "tkraise(self, aboveThis=None)",
      "unbind(self, sequence, funcid=None)",
      "unbindall(self, sequence)",
      "unbindclass(self, className, sequence)",
      "update(self)",
      "updateidletasks(self)",
      "waitvariable(self, name='PYVAR')",
      "waitvisibility(self, window=None)",
      "waitwindow(self, window=None)",
      "waitvar(self, name='PYVAR')",
      "winfoatom(self, name, displayof=0)",
      "winfoatomname(self, id, displayof=0)",
      "winfocells(self)",
      "winfochildren(self)",
      "winfoclass(self)",
      "winfocolormapfull(self)",
      "winfocontaining(self, rootX, rootY, displayof=0)",
      "winfodepth(self)",
      "winfoexists(self)",
      "winfofpixels(self, number)",
      "winfogeometry(self)",
      "winfoheight(self)",
      "winfoid(self)",
      "winfointerps(self, displayof=0)",
      "winfoismapped(self)",
      "winfomanager(self)",
      "winfoname(self)",
      "winfoparent(self)",
      "winfopathname(self, id, displayof=0)",
      "winfopixels(self, number)",
      "winfopointerx(self)",
      "winfopointerxy(self)",
      "winfopointery(self)",
      "winforeqheight(self)",
      "winforeqwidth(self)",
      "winforgb(self, color)",
      "winforootx(self)",
      "winforooty(self)",
      "winfoscreen(self)",
      "winfoscreencells(self)",
      "winfoscreendepth(self)",
      "winfoscreenheight(self)",
      "winfoscreenmmheight(self)",
      "winfoscreenmmwidth(self)",
      "winfoscreenvisual(self)",
      "winfoscreenwidth(self)",
      "winfoserver(self)",
      "winfotoplevel(self)",
      "winfoviewable(self)",
      "winfovisual(self)",
      "winfovisualid(self)",
      "winfovisualsavailable(self, includeids=False)",
      "winfovrootheight(self)",
      "winfovrootwidth(self)",
      "winfovrootx(self)",
      "winfovrooty(self)",
      "winfowidth(self)",
      "winfox(self)",
      "winfoy(self)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/ENTROPY_CERTS.md": {
    "headings": [
      "Entropy Certificates (Z/QFT)",
      "Fields (schema v1)",
      "Theoretical checks",
      "CLI"
    ],
    "bullets": [
      "d \u2014 Hilbert space dimension \\(d\\)",
      "basispair \u2014 currently \"Z/QFT\" (computational + discrete Fourier)",
      "HZbits \u2014 Shannon entropy of \\(pz = |a|^2\\) (bits)",
      "HminZbits \u2014 Min-entropy of \\(pz\\) (bits)",
      "HQFTbits \u2014 Shannon entropy of \\(pf = |Fa|^2\\) with unitary DFT \\(F/\\sqrt{d}\\) (bits)",
      "HminQFTbits \u2014 Min-entropy of \\(pf\\) (bits)",
      "flatness \u2014 spectral flatness of two-sided power \\( |\\mathrm{FFT}(a)|^2 \\) (geom/arith mean)",
      "version \u2014 schema version (int)",
      "Maassen\u2013Uffink (MUB) bound: for dimension \\(d\\),",
      "Ensemble von Neumann entropy:"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_FUNCTION_CHECKLIST_v2.md": {
    "headings": [
      "QTEGUI Function Checklist (v2)",
      "Tabs",
      "Event Handlers"
    ],
    "bullets": [
      "(none)",
      "(none)"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_API_MAP_v4.md": {
    "headings": [
      "QTEGUI API Map (v4)",
      "Tabs (source scan)",
      "Event Handlers (source scan)",
      "Introspection (actual class methods)",
      "Tabs",
      "Handlers",
      "In source but NOT on class (investigate / patch binding)",
      "QTEGUI_Lite snapshot",
      "EntropyTab",
      "SpectrumTab",
      "PayloadTab"
    ],
    "bullets": [
      "(none)",
      "(none)",
      "(none)",
      "(none)",
      "(none)",
      "after",
      "aftercancel",
      "afteridle",
      "anchor",
      "bbox",
      "bell",
      "bind",
      "bindall",
      "bindclass",
      "bindtags",
      "cget",
      "clipboardappend",
      "clipboardclear",
      "clipboardget",
      "columnconfigure",
      "computecertificate",
      "config",
      "configure",
      "deletecommand",
      "destroy",
      "eventadd",
      "eventdelete",
      "eventgenerate",
      "eventinfo",
      "focus",
      "focusdisplayof",
      "focusforce",
      "focusget",
      "focuslastfor",
      "focusset",
      "forget",
      "getboolean",
      "getdouble",
      "getint",
      "getvar",
      "grabcurrent",
      "grabrelease",
      "grabset",
      "grabsetglobal",
      "grabstatus",
      "grid",
      "gridanchor",
      "gridbbox",
      "gridcolumnconfigure",
      "gridconfigure",
      "gridforget",
      "gridinfo",
      "gridlocation",
      "gridpropagate",
      "gridremove",
      "gridrowconfigure",
      "gridsize",
      "gridslaves",
      "identify",
      "imagenames",
      "imagetypes",
      "info",
      "instate",
      "keys",
      "lift",
      "location",
      "lower",
      "mainloop",
      "nametowidget",
      "optionadd",
      "optionclear",
      "optionget",
      "optionreadfile",
      "pack",
      "packconfigure",
      "packforget",
      "packinfo",
      "packpropagate",
      "packslaves",
      "place",
      "placeconfigure",
      "placeforget",
      "placeinfo",
      "placeslaves",
      "propagate",
      "quit",
      "register",
      "rowconfigure",
      "savecertificate",
      "selectionclear",
      "selectionget",
      "selectionhandle",
      "selectionown",
      "selectionownget",
      "send",
      "setvar",
      "size",
      "slaves",
      "state",
      "tkbisque",
      "tkfocusFollowsMouse",
      "tkfocusNext",
      "tkfocusPrev",
      "tksetPalette",
      "tkstrictMotif",
      "tkraise",
      "unbind",
      "unbindall",
      "unbindclass",
      "update",
      "updateidletasks",
      "verifycertificate",
      "waitvariable",
      "waitvisibility",
      "waitwindow",
      "waitvar",
      "winfoatom",
      "winfoatomname",
      "winfocells",
      "winfochildren",
      "winfoclass",
      "winfocolormapfull",
      "winfocontaining",
      "winfodepth",
      "winfoexists",
      "winfofpixels",
      "winfogeometry",
      "winfoheight",
      "winfoid",
      "winfointerps",
      "winfoismapped",
      "winfomanager",
      "winfoname",
      "winfoparent",
      "winfopathname",
      "winfopixels",
      "winfopointerx",
      "winfopointerxy",
      "winfopointery",
      "winforeqheight",
      "winforeqwidth",
      "winforgb",
      "winforootx",
      "winforooty",
      "winfoscreen",
      "winfoscreencells",
      "winfoscreendepth",
      "winfoscreenheight",
      "winfoscreenmmheight",
      "winfoscreenmmwidth",
      "winfoscreenvisual",
      "winfoscreenwidth",
      "winfoserver",
      "winfotoplevel",
      "winfoviewable",
      "winfovisual",
      "winfovisualid",
      "winfovisualsavailable",
      "winfovrootheight",
      "winfovrootwidth",
      "winfovrootx",
      "winfovrooty",
      "winfowidth",
      "winfox",
      "winfoy",
      "after",
      "aftercancel",
      "afteridle",
      "anchor",
      "bbox",
      "bell",
      "bind",
      "bindall",
      "bindclass",
      "bindtags",
      "cget",
      "clipboardappend",
      "clipboardclear",
      "clipboardget",
      "columnconfigure",
      "config",
      "configure",
      "deletecommand",
      "destroy",
      "eventadd",
      "eventdelete",
      "eventgenerate",
      "eventinfo",
      "focus",
      "focusdisplayof",
      "focusforce",
      "focusget",
      "focuslastfor",
      "focusset",
      "forget",
      "getboolean",
      "getdouble",
      "getint",
      "getvar",
      "grabcurrent",
      "grabrelease",
      "grabset",
      "grabsetglobal",
      "grabstatus",
      "grid",
      "gridanchor",
      "gridbbox",
      "gridcolumnconfigure",
      "gridconfigure",
      "gridforget",
      "gridinfo",
      "gridlocation",
      "gridpropagate",
      "gridremove",
      "gridrowconfigure",
      "gridsize",
      "gridslaves",
      "identify",
      "imagenames",
      "imagetypes",
      "info",
      "instate",
      "keys",
      "lift",
      "location",
      "lower",
      "mainloop",
      "nametowidget",
      "optionadd",
      "optionclear",
      "optionget",
      "optionreadfile",
      "pack",
      "packconfigure",
      "packforget",
      "packinfo",
      "packpropagate",
      "packslaves",
      "place",
      "placeconfigure",
      "placeforget",
      "placeinfo",
      "placeslaves",
      "propagate",
      "quit",
      "register",
      "rowconfigure",
      "selectionclear",
      "selectionget",
      "selectionhandle",
      "selectionown",
      "selectionownget",
      "send",
      "setvar",
      "size",
      "slaves",
      "spectrum",
      "state",
      "tkbisque",
      "tkfocusFollowsMouse",
      "tkfocusNext",
      "tkfocusPrev",
      "tksetPalette",
      "tkstrictMotif",
      "tkraise",
      "unbind",
      "unbindall",
      "unbindclass",
      "update",
      "updateidletasks",
      "waitvariable",
      "waitvisibility",
      "waitwindow",
      "waitvar",
      "winfoatom",
      "winfoatomname",
      "winfocells",
      "winfochildren",
      "winfoclass",
      "winfocolormapfull",
      "winfocontaining",
      "winfodepth",
      "winfoexists",
      "winfofpixels",
      "winfogeometry",
      "winfoheight",
      "winfoid",
      "winfointerps",
      "winfoismapped",
      "winfomanager",
      "winfoname",
      "winfoparent",
      "winfopathname",
      "winfopixels",
      "winfopointerx",
      "winfopointerxy",
      "winfopointery",
      "winforeqheight",
      "winforeqwidth",
      "winforgb",
      "winforootx",
      "winforooty",
      "winfoscreen",
      "winfoscreencells",
      "winfoscreendepth",
      "winfoscreenheight",
      "winfoscreenmmheight",
      "winfoscreenmmwidth",
      "winfoscreenvisual",
      "winfoscreenwidth",
      "winfoserver",
      "winfotoplevel",
      "winfoviewable",
      "winfovisual",
      "winfovisualid",
      "winfovisualsavailable",
      "winfovrootheight",
      "winfovrootwidth",
      "winfovrootx",
      "winfovrooty",
      "winfowidth",
      "winfox",
      "winfoy",
      "after",
      "aftercancel",
      "afteridle",
      "anchor",
      "bbox",
      "bell",
      "bind",
      "bindall",
      "bindclass",
      "bindtags",
      "cget",
      "clipboardappend",
      "clipboardclear",
      "clipboardget",
      "columnconfigure",
      "config",
      "configure",
      "deletecommand",
      "destroy",
      "eventadd",
      "eventdelete",
      "eventgenerate",
      "eventinfo",
      "focus",
      "focusdisplayof",
      "focusforce",
      "focusget",
      "focuslastfor",
      "focusset",
      "forget",
      "getboolean",
      "getdouble",
      "getint",
      "getvar",
      "grabcurrent",
      "grabrelease",
      "grabset",
      "grabsetglobal",
      "grabstatus",
      "grid",
      "gridanchor",
      "gridbbox",
      "gridcolumnconfigure",
      "gridconfigure",
      "gridforget",
      "gridinfo",
      "gridlocation",
      "gridpropagate",
      "gridremove",
      "gridrowconfigure",
      "gridsize",
      "gridslaves",
      "identify",
      "imagenames",
      "imagetypes",
      "info",
      "instate",
      "keys",
      "lift",
      "location",
      "lower",
      "mainloop",
      "nametowidget",
      "optionadd",
      "optionclear",
      "optionget",
      "optionreadfile",
      "pack",
      "packconfigure",
      "packforget",
      "packinfo",
      "packpropagate",
      "packslaves",
      "place",
      "placeconfigure",
      "placeforget",
      "placeinfo",
      "placeslaves",
      "propagate",
      "quit",
      "register",
      "rowconfigure",
      "rundemo",
      "selectionclear",
      "selectionget",
      "selectionhandle",
      "selectionown",
      "selectionownget",
      "send",
      "setvar",
      "size",
      "slaves",
      "state",
      "tkbisque",
      "tkfocusFollowsMouse",
      "tkfocusNext",
      "tkfocusPrev",
      "tksetPalette",
      "tkstrictMotif",
      "tkraise",
      "unbind",
      "unbindall",
      "unbindclass",
      "update",
      "updateidletasks",
      "waitvariable",
      "waitvisibility",
      "waitwindow",
      "waitvar",
      "winfoatom",
      "winfoatomname",
      "winfocells",
      "winfochildren",
      "winfoclass",
      "winfocolormapfull",
      "winfocontaining",
      "winfodepth",
      "winfoexists",
      "winfofpixels",
      "winfogeometry",
      "winfoheight",
      "winfoid",
      "winfointerps",
      "winfoismapped",
      "winfomanager",
      "winfoname",
      "winfoparent",
      "winfopathname",
      "winfopixels",
      "winfopointerx",
      "winfopointerxy",
      "winfopointery",
      "winforeqheight",
      "winforeqwidth",
      "winforgb",
      "winforootx",
      "winforooty",
      "winfoscreen",
      "winfoscreencells",
      "winfoscreendepth",
      "winfoscreenheight",
      "winfoscreenmmheight",
      "winfoscreenmmwidth",
      "winfoscreenvisual",
      "winfoscreenwidth",
      "winfoserver",
      "winfotoplevel",
      "winfoviewable",
      "winfovisual",
      "winfovisualid",
      "winfovisualsavailable",
      "winfovrootheight",
      "winfovrootwidth",
      "winfovrootx",
      "winfovrooty",
      "winfowidth",
      "winfox",
      "winfoy"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_ROADMAP.md": {
    "headings": [
      "QTE GUI \u2014 Roadmap"
    ],
    "bullets": []
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/labels.md": {
    "headings": [
      "Labels reference",
      "Constants / series",
      "Polylog",
      "Bessel",
      "Maclaurin",
      "Transforms (QFT)",
      "Rail mapping",
      "Caching"
    ],
    "bullets": [
      "\u03c0, e, ln(2), \u03b6(k) for k=2..5, \u03b3 (Euler\u2013Mascheroni), Catalan, \u03c6, exp(\u03c0), 2^\u221a2.",
      "Syntax: Li(s,z) / polylog(s, z) (complex s,z supported).",
      "Backends: --backend {auto,series,mp} or env QTEPOLYLOGBACKEND.",
      "Principal branch used near the real axis.",
      "Cylindrical Bessel Jn: J0, J1, J2, \u2026",
      "Maclaurin[f(x); x=<point>; r=<radius>] with helpers autor, realcoeffs.",
      "QFT[f(x); N=<pow2>; a=<start>; b=<end>; ifft] \u2014 sample on [a,b], IFFT to register.",
      "Append [rail] to map plus/minus amplitudes to even/odd rails.",
      "Enable with --cache or QTECACHE=1.",
      "Clear at runtime:"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTE_TAB_05_GATES.md": {
    "headings": [
      "Tab 05 \u2014 Gates",
      "Controls",
      "Actions",
      "Notes"
    ],
    "bullets": [
      "the current QFT circuit (if built), or",
      "a prep circuit that initializes the Active statevector.",
      "Decompose initialize \u2014 expands initialize to native gates (verbose)",
      "Hide initialize box \u2014 show compact placeholder instead",
      "Barrier after prep \u2014 visual split between prep and later ops",
      "Reverse bits \u2014 flip wire order",
      "Wrap width (fold) \u2014 line-wrap threshold for drawer",
      "Figure width \u2014 width hint passed to the MPL drawer",
      "Draw Current QFT Circuit \u2014 renders the last built QFT spectrum circuit",
      "Draw Prep for Active/Last Saved \u2014 builds initialize(|\u03c8\u27e9) and draws it",
      "Draw (ASCII / Text) \u2014 text drawer (always readable, no ellipses)",
      "Show Summary \u2014 quick numeric circuit summary (ops, depth, size)",
      "When \u201cdecompose initialize\u201d is on, the drawer uses decompose(reps=4).",
      "The text drawer is useful in headless CI."
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_API_MAP.md": {
    "headings": [
      "QTEGUI API Map",
      "File: QTEGUI.py",
      "Flags",
      "Top-level functions",
      "Classes and methods",
      "Tabs (builders)",
      "Event Handlers (`on_*`)",
      "File: QTEGUI_Lite.py",
      "EntropyTab",
      "SpectrumTab",
      "PayloadTab",
      "Coverage Checklist"
    ],
    "bullets": [
      "hasFigureCanvasTkAgg: True",
      "hastkimport: True",
      "hasttkimport: True",
      "haseval: False",
      "hasTOMOOK: True",
      "hasfftwrapper: True",
      "tabswired: True",
      "importsentropylab: True",
      "importsharmonicanalysis: True",
      "importsquantumembedding: True",
      "qtecall",
      "(no buildtab methods found)",
      "(none)",
      "init",
      "buildui",
      "computecertificate",
      "savecertificate",
      "verifycertificate",
      "init",
      "buildui",
      "spectrum",
      "init",
      "buildui",
      "rundemo",
      "Wiring to Lite tabs present in QTEGUI: yes",
      "TOMOOK defined: yes",
      "FFT wrapper fftfromgui used: yes",
      "Matplotlib Tk canvas import: yes",
      "Tk imports guarded: likely",
      "Optional deps present in code: entropylab, harmonicanalysis, quantumembedding"
    ]
  },
  "/Users/erik/Documents/QTExpanded/program5_branch_series/docs/QTEGUI_FUNCTION_CHECKLIST_final.md": {
    "headings": [
      "QTE GUI Function Checklist (final)",
      "EntropyTab",
      "SpectrumTab",
      "PayloadTab"
    ],
    "bullets": [
      "[ ] Miscwinfogetint(self, x)",
      "[ ] Miscwinfoparseitem(self, t)",
      "[ ] bind(self, what, sequence, func, add, needcleanup=1)",
      "[ ] buildui(self)",
      "[ ] configure(self, cmd, cnf, kw)",
      "[ ] displayof(self, displayof)",
      "[ ] do(self, name, args=())",
      "[ ] getboolean(self, string)",
      "[ ] getconfigure(self, args)",
      "[ ] getconfigure1(self, args)",
      "[ ] getdoubles(self, string)",
      "[ ] getints(self, string)",
      "[ ] gridconfigure(self, command, index, cnf, kw)",
      "[ ] gridconvvalue(self, value)",
      "[ ] nametowidget(self, name)",
      "[ ] options(self, cnf, kw=None)",
      "[ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] reportexception(self)",
      "[ ] root(self)",
      "[ ] setup(self, master, cnf)",
      "[ ] substitute(self, args)",
      "[ ] after(self, ms, func=None, args)",
      "[ ] aftercancel(self, id)",
      "[ ] afteridle(self, func, args)",
      "[ ] anchor(self, anchor=None)",
      "[ ] bbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] bell(self, displayof=0)",
      "[ ] bind(self, sequence=None, func=None, add=None)",
      "[ ] bindall(self, sequence=None, func=None, add=None)",
      "[ ] bindclass(self, className, sequence=None, func=None, add=None)",
      "[ ] bindtags(self, tagList=None)",
      "[ ] cget(self, key)",
      "[ ] clipboardappend(self, string, kw)",
      "[ ] clipboardclear(self, kw)",
      "[ ] clipboardget(self, kw)",
      "[ ] columnconfigure(self, index, cnf={}, kw)",
      "[ ] computecertificate(self)",
      "[ ] config(self, cnf=None, kw)",
      "[ ] configure(self, cnf=None, kw)",
      "[ ] deletecommand(self, name)",
      "[ ] destroy(self)",
      "[ ] eventadd(self, virtual, sequences)",
      "[ ] eventdelete(self, virtual, sequences)",
      "[ ] eventgenerate(self, sequence, kw)",
      "[ ] eventinfo(self, virtual=None)",
      "[ ] focus(self)",
      "[ ] focusdisplayof(self)",
      "[ ] focusforce(self)",
      "[ ] focusget(self)",
      "[ ] focuslastfor(self)",
      "[ ] focusset(self)",
      "[ ] forget(self)",
      "[ ] getboolean(self, s)",
      "[ ] getdouble(self, s)",
      "[ ] getint(self, s)",
      "[ ] getvar(self, name='PYVAR')",
      "[ ] grabcurrent(self)",
      "[ ] grabrelease(self)",
      "[ ] grabset(self)",
      "[ ] grabsetglobal(self)",
      "[ ] grabstatus(self)",
      "[ ] grid(self, cnf={}, kw)",
      "[ ] gridanchor(self, anchor=None)",
      "[ ] gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] gridcolumnconfigure(self, index, cnf={}, kw)",
      "[ ] gridconfigure(self, cnf={}, kw)",
      "[ ] gridforget(self)",
      "[ ] gridinfo(self)",
      "[ ] gridlocation(self, x, y)",
      "[ ] gridpropagate(self, flag=['noarg'])",
      "[ ] gridremove(self)",
      "[ ] gridrowconfigure(self, index, cnf={}, kw)",
      "[ ] gridsize(self)",
      "[ ] gridslaves(self, row=None, column=None)",
      "[ ] identify(self, x, y)",
      "[ ] imagenames(self)",
      "[ ] imagetypes(self)",
      "[ ] info(self)",
      "[ ] instate(self, statespec, callback=None, args, kw)",
      "[ ] keys(self)",
      "[ ] lift(self, aboveThis=None)",
      "[ ] location(self, x, y)",
      "[ ] lower(self, belowThis=None)",
      "[ ] mainloop(self, n=0)",
      "[ ] nametowidget(self, name)",
      "[ ] optionadd(self, pattern, value, priority=None)",
      "[ ] optionclear(self)",
      "[ ] optionget(self, name, className)",
      "[ ] optionreadfile(self, fileName, priority=None)",
      "[ ] pack(self, cnf={}, kw)",
      "[ ] packconfigure(self, cnf={}, kw)",
      "[ ] packforget(self)",
      "[ ] packinfo(self)",
      "[ ] packpropagate(self, flag=['noarg'])",
      "[ ] packslaves(self)",
      "[ ] place(self, cnf={}, kw)",
      "[ ] placeconfigure(self, cnf={}, kw)",
      "[ ] placeforget(self)",
      "[ ] placeinfo(self)",
      "[ ] placeslaves(self)",
      "[ ] propagate(self, flag=['noarg'])",
      "[ ] quit(self)",
      "[ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] rowconfigure(self, index, cnf={}, kw)",
      "[ ] savecertificate(self, path: Optional[str] = None) -> Optional[str]",
      "[ ] selectionclear(self, kw)",
      "[ ] selectionget(self, kw)",
      "[ ] selectionhandle(self, command, kw)",
      "[ ] selectionown(self, kw)",
      "[ ] selectionownget(self, kw)",
      "[ ] send(self, interp, cmd, args)",
      "[ ] setvar(self, name='PYVAR', value='1')",
      "[ ] size(self)",
      "[ ] slaves(self)",
      "[ ] state(self, statespec=None)",
      "[ ] tkbisque(self)",
      "[ ] tkfocusFollowsMouse(self)",
      "[ ] tkfocusNext(self)",
      "[ ] tkfocusPrev(self)",
      "[ ] tksetPalette(self, args, kw)",
      "[ ] tkstrictMotif(self, boolean=None)",
      "[ ] tkraise(self, aboveThis=None)",
      "[ ] unbind(self, sequence, funcid=None)",
      "[ ] unbindall(self, sequence)",
      "[ ] unbindclass(self, className, sequence)",
      "[ ] update(self)",
      "[ ] updateidletasks(self)",
      "[ ] verifycertificate(self, path: str, atolbits: float = 1e-06)",
      "[ ] waitvariable(self, name='PYVAR')",
      "[ ] waitvisibility(self, window=None)",
      "[ ] waitwindow(self, window=None)",
      "[ ] waitvar(self, name='PYVAR')",
      "[ ] winfoatom(self, name, displayof=0)",
      "[ ] winfoatomname(self, id, displayof=0)",
      "[ ] winfocells(self)",
      "[ ] winfochildren(self)",
      "[ ] winfoclass(self)",
      "[ ] winfocolormapfull(self)",
      "[ ] winfocontaining(self, rootX, rootY, displayof=0)",
      "[ ] winfodepth(self)",
      "[ ] winfoexists(self)",
      "[ ] winfofpixels(self, number)",
      "[ ] winfogeometry(self)",
      "[ ] winfoheight(self)",
      "[ ] winfoid(self)",
      "[ ] winfointerps(self, displayof=0)",
      "[ ] winfoismapped(self)",
      "[ ] winfomanager(self)",
      "[ ] winfoname(self)",
      "[ ] winfoparent(self)",
      "[ ] winfopathname(self, id, displayof=0)",
      "[ ] winfopixels(self, number)",
      "[ ] winfopointerx(self)",
      "[ ] winfopointerxy(self)",
      "[ ] winfopointery(self)",
      "[ ] winforeqheight(self)",
      "[ ] winforeqwidth(self)",
      "[ ] winforgb(self, color)",
      "[ ] winforootx(self)",
      "[ ] winforooty(self)",
      "[ ] winfoscreen(self)",
      "[ ] winfoscreencells(self)",
      "[ ] winfoscreendepth(self)",
      "[ ] winfoscreenheight(self)",
      "[ ] winfoscreenmmheight(self)",
      "[ ] winfoscreenmmwidth(self)",
      "[ ] winfoscreenvisual(self)",
      "[ ] winfoscreenwidth(self)",
      "[ ] winfoserver(self)",
      "[ ] winfotoplevel(self)",
      "[ ] winfoviewable(self)",
      "[ ] winfovisual(self)",
      "[ ] winfovisualid(self)",
      "[ ] winfovisualsavailable(self, includeids=False)",
      "[ ] winfovrootheight(self)",
      "[ ] winfovrootwidth(self)",
      "[ ] winfovrootx(self)",
      "[ ] winfovrooty(self)",
      "[ ] winfowidth(self)",
      "[ ] winfox(self)",
      "[ ] winfoy(self)",
      "[ ] Miscwinfogetint(self, x)",
      "[ ] Miscwinfoparseitem(self, t)",
      "[ ] bind(self, what, sequence, func, add, needcleanup=1)",
      "[ ] buildui(self)",
      "[ ] configure(self, cmd, cnf, kw)",
      "[ ] displayof(self, displayof)",
      "[ ] do(self, name, args=())",
      "[ ] getboolean(self, string)",
      "[ ] getconfigure(self, args)",
      "[ ] getconfigure1(self, args)",
      "[ ] getdoubles(self, string)",
      "[ ] getints(self, string)",
      "[ ] gridconfigure(self, command, index, cnf, kw)",
      "[ ] gridconvvalue(self, value)",
      "[ ] nametowidget(self, name)",
      "[ ] options(self, cnf, kw=None)",
      "[ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] reportexception(self)",
      "[ ] root(self)",
      "[ ] setup(self, master, cnf)",
      "[ ] substitute(self, args)",
      "[ ] after(self, ms, func=None, args)",
      "[ ] aftercancel(self, id)",
      "[ ] afteridle(self, func, args)",
      "[ ] anchor(self, anchor=None)",
      "[ ] bbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] bell(self, displayof=0)",
      "[ ] bind(self, sequence=None, func=None, add=None)",
      "[ ] bindall(self, sequence=None, func=None, add=None)",
      "[ ] bindclass(self, className, sequence=None, func=None, add=None)",
      "[ ] bindtags(self, tagList=None)",
      "[ ] cget(self, key)",
      "[ ] clipboardappend(self, string, kw)",
      "[ ] clipboardclear(self, kw)",
      "[ ] clipboardget(self, kw)",
      "[ ] columnconfigure(self, index, cnf={}, kw)",
      "[ ] config(self, cnf=None, kw)",
      "[ ] configure(self, cnf=None, kw)",
      "[ ] deletecommand(self, name)",
      "[ ] destroy(self)",
      "[ ] eventadd(self, virtual, sequences)",
      "[ ] eventdelete(self, virtual, sequences)",
      "[ ] eventgenerate(self, sequence, kw)",
      "[ ] eventinfo(self, virtual=None)",
      "[ ] focus(self)",
      "[ ] focusdisplayof(self)",
      "[ ] focusforce(self)",
      "[ ] focusget(self)",
      "[ ] focuslastfor(self)",
      "[ ] focusset(self)",
      "[ ] forget(self)",
      "[ ] getboolean(self, s)",
      "[ ] getdouble(self, s)",
      "[ ] getint(self, s)",
      "[ ] getvar(self, name='PYVAR')",
      "[ ] grabcurrent(self)",
      "[ ] grabrelease(self)",
      "[ ] grabset(self)",
      "[ ] grabsetglobal(self)",
      "[ ] grabstatus(self)",
      "[ ] grid(self, cnf={}, kw)",
      "[ ] gridanchor(self, anchor=None)",
      "[ ] gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] gridcolumnconfigure(self, index, cnf={}, kw)",
      "[ ] gridconfigure(self, cnf={}, kw)",
      "[ ] gridforget(self)",
      "[ ] gridinfo(self)",
      "[ ] gridlocation(self, x, y)",
      "[ ] gridpropagate(self, flag=['noarg'])",
      "[ ] gridremove(self)",
      "[ ] gridrowconfigure(self, index, cnf={}, kw)",
      "[ ] gridsize(self)",
      "[ ] gridslaves(self, row=None, column=None)",
      "[ ] identify(self, x, y)",
      "[ ] imagenames(self)",
      "[ ] imagetypes(self)",
      "[ ] info(self)",
      "[ ] instate(self, statespec, callback=None, args, kw)",
      "[ ] keys(self)",
      "[ ] lift(self, aboveThis=None)",
      "[ ] location(self, x, y)",
      "[ ] lower(self, belowThis=None)",
      "[ ] mainloop(self, n=0)",
      "[ ] nametowidget(self, name)",
      "[ ] optionadd(self, pattern, value, priority=None)",
      "[ ] optionclear(self)",
      "[ ] optionget(self, name, className)",
      "[ ] optionreadfile(self, fileName, priority=None)",
      "[ ] pack(self, cnf={}, kw)",
      "[ ] packconfigure(self, cnf={}, kw)",
      "[ ] packforget(self)",
      "[ ] packinfo(self)",
      "[ ] packpropagate(self, flag=['noarg'])",
      "[ ] packslaves(self)",
      "[ ] place(self, cnf={}, kw)",
      "[ ] placeconfigure(self, cnf={}, kw)",
      "[ ] placeforget(self)",
      "[ ] placeinfo(self)",
      "[ ] placeslaves(self)",
      "[ ] propagate(self, flag=['noarg'])",
      "[ ] quit(self)",
      "[ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] rowconfigure(self, index, cnf={}, kw)",
      "[ ] selectionclear(self, kw)",
      "[ ] selectionget(self, kw)",
      "[ ] selectionhandle(self, command, kw)",
      "[ ] selectionown(self, kw)",
      "[ ] selectionownget(self, kw)",
      "[ ] send(self, interp, cmd, args)",
      "[ ] setvar(self, name='PYVAR', value='1')",
      "[ ] size(self)",
      "[ ] slaves(self)",
      "[ ] spectrum(self, a: numpy.ndarray) -> Dict[str, Any]",
      "[ ] state(self, statespec=None)",
      "[ ] tkbisque(self)",
      "[ ] tkfocusFollowsMouse(self)",
      "[ ] tkfocusNext(self)",
      "[ ] tkfocusPrev(self)",
      "[ ] tksetPalette(self, args, kw)",
      "[ ] tkstrictMotif(self, boolean=None)",
      "[ ] tkraise(self, aboveThis=None)",
      "[ ] unbind(self, sequence, funcid=None)",
      "[ ] unbindall(self, sequence)",
      "[ ] unbindclass(self, className, sequence)",
      "[ ] update(self)",
      "[ ] updateidletasks(self)",
      "[ ] waitvariable(self, name='PYVAR')",
      "[ ] waitvisibility(self, window=None)",
      "[ ] waitwindow(self, window=None)",
      "[ ] waitvar(self, name='PYVAR')",
      "[ ] winfoatom(self, name, displayof=0)",
      "[ ] winfoatomname(self, id, displayof=0)",
      "[ ] winfocells(self)",
      "[ ] winfochildren(self)",
      "[ ] winfoclass(self)",
      "[ ] winfocolormapfull(self)",
      "[ ] winfocontaining(self, rootX, rootY, displayof=0)",
      "[ ] winfodepth(self)",
      "[ ] winfoexists(self)",
      "[ ] winfofpixels(self, number)",
      "[ ] winfogeometry(self)",
      "[ ] winfoheight(self)",
      "[ ] winfoid(self)",
      "[ ] winfointerps(self, displayof=0)",
      "[ ] winfoismapped(self)",
      "[ ] winfomanager(self)",
      "[ ] winfoname(self)",
      "[ ] winfoparent(self)",
      "[ ] winfopathname(self, id, displayof=0)",
      "[ ] winfopixels(self, number)",
      "[ ] winfopointerx(self)",
      "[ ] winfopointerxy(self)",
      "[ ] winfopointery(self)",
      "[ ] winforeqheight(self)",
      "[ ] winforeqwidth(self)",
      "[ ] winforgb(self, color)",
      "[ ] winforootx(self)",
      "[ ] winforooty(self)",
      "[ ] winfoscreen(self)",
      "[ ] winfoscreencells(self)",
      "[ ] winfoscreendepth(self)",
      "[ ] winfoscreenheight(self)",
      "[ ] winfoscreenmmheight(self)",
      "[ ] winfoscreenmmwidth(self)",
      "[ ] winfoscreenvisual(self)",
      "[ ] winfoscreenwidth(self)",
      "[ ] winfoserver(self)",
      "[ ] winfotoplevel(self)",
      "[ ] winfoviewable(self)",
      "[ ] winfovisual(self)",
      "[ ] winfovisualid(self)",
      "[ ] winfovisualsavailable(self, includeids=False)",
      "[ ] winfovrootheight(self)",
      "[ ] winfovrootwidth(self)",
      "[ ] winfovrootx(self)",
      "[ ] winfovrooty(self)",
      "[ ] winfowidth(self)",
      "[ ] winfox(self)",
      "[ ] winfoy(self)",
      "[ ] Miscwinfogetint(self, x)",
      "[ ] Miscwinfoparseitem(self, t)",
      "[ ] bind(self, what, sequence, func, add, needcleanup=1)",
      "[ ] buildui(self)",
      "[ ] configure(self, cmd, cnf, kw)",
      "[ ] displayof(self, displayof)",
      "[ ] do(self, name, args=())",
      "[ ] getboolean(self, string)",
      "[ ] getconfigure(self, args)",
      "[ ] getconfigure1(self, args)",
      "[ ] getdoubles(self, string)",
      "[ ] getints(self, string)",
      "[ ] gridconfigure(self, command, index, cnf, kw)",
      "[ ] gridconvvalue(self, value)",
      "[ ] nametowidget(self, name)",
      "[ ] options(self, cnf, kw=None)",
      "[ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] reportexception(self)",
      "[ ] root(self)",
      "[ ] setup(self, master, cnf)",
      "[ ] substitute(self, args)",
      "[ ] after(self, ms, func=None, args)",
      "[ ] aftercancel(self, id)",
      "[ ] afteridle(self, func, args)",
      "[ ] anchor(self, anchor=None)",
      "[ ] bbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] bell(self, displayof=0)",
      "[ ] bind(self, sequence=None, func=None, add=None)",
      "[ ] bindall(self, sequence=None, func=None, add=None)",
      "[ ] bindclass(self, className, sequence=None, func=None, add=None)",
      "[ ] bindtags(self, tagList=None)",
      "[ ] cget(self, key)",
      "[ ] clipboardappend(self, string, kw)",
      "[ ] clipboardclear(self, kw)",
      "[ ] clipboardget(self, kw)",
      "[ ] columnconfigure(self, index, cnf={}, kw)",
      "[ ] config(self, cnf=None, kw)",
      "[ ] configure(self, cnf=None, kw)",
      "[ ] deletecommand(self, name)",
      "[ ] destroy(self)",
      "[ ] eventadd(self, virtual, sequences)",
      "[ ] eventdelete(self, virtual, sequences)",
      "[ ] eventgenerate(self, sequence, kw)",
      "[ ] eventinfo(self, virtual=None)",
      "[ ] focus(self)",
      "[ ] focusdisplayof(self)",
      "[ ] focusforce(self)",
      "[ ] focusget(self)",
      "[ ] focuslastfor(self)",
      "[ ] focusset(self)",
      "[ ] forget(self)",
      "[ ] getboolean(self, s)",
      "[ ] getdouble(self, s)",
      "[ ] getint(self, s)",
      "[ ] getvar(self, name='PYVAR')",
      "[ ] grabcurrent(self)",
      "[ ] grabrelease(self)",
      "[ ] grabset(self)",
      "[ ] grabsetglobal(self)",
      "[ ] grabstatus(self)",
      "[ ] grid(self, cnf={}, kw)",
      "[ ] gridanchor(self, anchor=None)",
      "[ ] gridbbox(self, column=None, row=None, col2=None, row2=None)",
      "[ ] gridcolumnconfigure(self, index, cnf={}, kw)",
      "[ ] gridconfigure(self, cnf={}, kw)",
      "[ ] gridforget(self)",
      "[ ] gridinfo(self)",
      "[ ] gridlocation(self, x, y)",
      "[ ] gridpropagate(self, flag=['noarg'])",
      "[ ] gridremove(self)",
      "[ ] gridrowconfigure(self, index, cnf={}, kw)",
      "[ ] gridsize(self)",
      "[ ] gridslaves(self, row=None, column=None)",
      "[ ] identify(self, x, y)",
      "[ ] imagenames(self)",
      "[ ] imagetypes(self)",
      "[ ] info(self)",
      "[ ] instate(self, statespec, callback=None, args, kw)",
      "[ ] keys(self)",
      "[ ] lift(self, aboveThis=None)",
      "[ ] location(self, x, y)",
      "[ ] lower(self, belowThis=None)",
      "[ ] mainloop(self, n=0)",
      "[ ] nametowidget(self, name)",
      "[ ] optionadd(self, pattern, value, priority=None)",
      "[ ] optionclear(self)",
      "[ ] optionget(self, name, className)",
      "[ ] optionreadfile(self, fileName, priority=None)",
      "[ ] pack(self, cnf={}, kw)",
      "[ ] packconfigure(self, cnf={}, kw)",
      "[ ] packforget(self)",
      "[ ] packinfo(self)",
      "[ ] packpropagate(self, flag=['noarg'])",
      "[ ] packslaves(self)",
      "[ ] place(self, cnf={}, kw)",
      "[ ] placeconfigure(self, cnf={}, kw)",
      "[ ] placeforget(self)",
      "[ ] placeinfo(self)",
      "[ ] placeslaves(self)",
      "[ ] propagate(self, flag=['noarg'])",
      "[ ] quit(self)",
      "[ ] register(self, func, subst=None, needcleanup=1)",
      "[ ] rowconfigure(self, index, cnf={}, kw)",
      "[ ] rundemo(self, n: int = 6, v: int = 13, key: bytes = b'key', tamper: bool = False)",
      "[ ] selectionclear(self, kw)",
      "[ ] selectionget(self, kw)",
      "[ ] selectionhandle(self, command, kw)",
      "[ ] selectionown(self, kw)",
      "[ ] selectionownget(self, kw)",
      "[ ] send(self, interp, cmd, args)",
      "[ ] setvar(self, name='PYVAR', value='1')",
      "[ ] size(self)",
      "[ ] slaves(self)",
      "[ ] state(self, statespec=None)",
      "[ ] tkbisque(self)",
      "[ ] tkfocusFollowsMouse(self)",
      "[ ] tkfocusNext(self)",
      "[ ] tkfocusPrev(self)",
      "[ ] tksetPalette(self, args, kw)",
      "[ ] tkstrictMotif(self, boolean=None)",
      "[ ] tkraise(self, aboveThis=None)",
      "[ ] unbind(self, sequence, funcid=None)",
      "[ ] unbindall(self, sequence)",
      "[ ] unbindclass(self, className, sequence)",
      "[ ] update(self)",
      "[ ] updateidletasks(self)",
      "[ ] waitvariable(self, name='PYVAR')",
      "[ ] waitvisibility(self, window=None)",
      "[ ] waitwindow(self, window=None)",
      "[ ] waitvar(self, name='PYVAR')",
      "[ ] winfoatom(self, name, displayof=0)",
      "[ ] winfoatomname(self, id, displayof=0)",
      "[ ] winfocells(self)",
      "[ ] winfochildren(self)",
      "[ ] winfoclass(self)",
      "[ ] winfocolormapfull(self)",
      "[ ] winfocontaining(self, rootX, rootY, displayof=0)",
      "[ ] winfodepth(self)",
      "[ ] winfoexists(self)",
      "[ ] winfofpixels(self, number)",
      "[ ] winfogeometry(self)",
      "[ ] winfoheight(self)",
      "[ ] winfoid(self)",
      "[ ] winfointerps(self, displayof=0)",
      "[ ] winfoismapped(self)",
      "[ ] winfomanager(self)",
      "[ ] winfoname(self)",
      "[ ] winfoparent(self)",
      "[ ] winfopathname(self, id, displayof=0)",
      "[ ] winfopixels(self, number)",
      "[ ] winfopointerx(self)",
      "[ ] winfopointerxy(self)",
      "[ ] winfopointery(self)",
      "[ ] winforeqheight(self)",
      "[ ] winforeqwidth(self)",
      "[ ] winforgb(self, color)",
      "[ ] winforootx(self)",
      "[ ] winforooty(self)",
      "[ ] winfoscreen(self)",
      "[ ] winfoscreencells(self)",
      "[ ] winfoscreendepth(self)",
      "[ ] winfoscreenheight(self)",
      "[ ] winfoscreenmmheight(self)",
      "[ ] winfoscreenmmwidth(self)",
      "[ ] winfoscreenvisual(self)",
      "[ ] winfoscreenwidth(self)",
      "[ ] winfoserver(self)",
      "[ ] winfotoplevel(self)",
      "[ ] winfoviewable(self)",
      "[ ] winfovisual(self)",
      "[ ] winfovisualid(self)",
      "[ ] winfovisualsavailable(self, includeids=False)",
      "[ ] winfovrootheight(self)",
      "[ ] winfovrootwidth(self)",
      "[ ] winfovrootx(self)",
      "[ ] winfovrooty(self)",
      "[ ] winfowidth(self)",
      "[ ] winfox(self)",
      "[ ] winfoy(self)"
    ]
  }
}